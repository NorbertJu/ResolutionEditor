{"version":3,"sources":["actions/index.js","containers/AddStep.js","components/ErrorMsg.js","components/ReferenceFormGroup.js","components/UnifierFormGroup.js","components/RenamingFormGroup.js","components/ResolutionParams.js","components/FactoringParams.js","components/Step.js","components/Proof.js","containers/ActualProof.js","components/Language.js","containers/ActualLanguage.js","containers/UndoRedo.js","containers/ImportExport.js","components/App.js","model/term/Term.js","model/term/Term.Constant.js","model/term/Term.FunctionTerm.js","model/term/Term.Variable.js","model/formula/Formula.js","model/formula/Formula.Clause.js","model/formula/Formula.Literal.js","reducers/step.js","reducers/steps.js","reducers/language.js","reducers/index.js","index.js"],"names":["ADD_STEP","CHANGE_STEP","CHANGE_RULE","CHANGE_UNIFIER","CHANGE_RENAMING","CHANGE_REFERENCE1","CHANGE_REFERENCE2","DELETE_STEP","INSERT_STEP","STEP_UP","STEP_DOWN","CHANGE_CONST","CHANGE_FUN","CHANGE_PRED","INPUT_FOCUS","IMPORT_STATE","EXPORT_STATE","nextStepId","inputFocus","text","type","inputBlur","AddStep","dispatch","onSubmit","e","preventDefault","id","className","connect","ErrorMsg","error","input","hasOwnProperty","substring","location","start","offset","end","length","name","message","Reference","reference","index","number","onReference","onFocus","onBlur","htmlFor","onChange","target","value","Unifier","unifier","onUnifier","Renaming","renaming","onRenaming","Resolution","reference1","reference2","onReference1","onReference2","Factoring","Step","step","onDelete","onInsert","onUp","onDown","onRule","onClick","style","float","formula","valid","rule","disabled","Proof","steps","onStepDelete","onStepChange","onStepInsert","onStepUp","onStepDown","onRuleChange","margin","order","map","key","allSteps","get","state","mapDispatchToProps","position","ActualProof","present","Language","language","onConstChange","onFunChange","onPredChange","consts","funs","preds","ActualLanguage","UndoRedo","canUndo","canRedo","onUndo","onRedo","role","UndoActionCreators","undo","redo","past","future","ImportExport","onImport","onExport","event","reader","FileReader","onload","files","result","readAsText","data","App","Term","this","Error","Constant","other","FunctionTerm","subts","join","every","subt","i","equals","substitute","Variable","has","Formula","subfs","Clause","lits","litsMultiset","lit","toString","getLitsMultiset","tuple","contains","push","cl2","lm1","lm2","lit1","nlit1","negation","lit2","flatMap","l1","n1","Array","fill","concat","l2","n2","cl1","getResolvents","resolvent","lm","cl","getFactors","factor","Literal","neg","terms","res","term","action","validateReference","rank","parseInt","isNaN","object","validateSubs","subs","j","getFactories","checkArity","symbol","args","arityMap","expected","a","variable","_","constant","functionApplication","funSymbol","ee","Function","literal","negated","predSymbol","clause","literals","getSymbols","nonLogicalSymbols","Set","keys","isConstant","isFunction","isPredicate","isVariable","newStep","undefined","checkReferenceAfterInsert","checkReferenceAfterDelete","checkReferenceAfterMove","position1","position2","validateStep","parseSubstitution","Map","validateRenaming","validateUnifier","parseClause","validateClause","premise","getPremise","isFactorOf","premise1","premise2","isResolventOf","Object","assign","from","checked","s","add","set","delOrder","newSteps","delete","newOrder","filter","newRank","entries","newState","slice","validSymbols","symbols","validateConsts","validateFuns","symbol1","validatePreds","symbol2","parseConstants","parseFunctions","obj","arity","parsePredicates","initialCombinedState","inputChange","originValue","undoableState","undoable","languageState","stepsState","link","document","createElement","setAttribute","stateCopy","Blob","JSON","stringify","url","window","URL","createObjectURL","href","click","parse","currentState","previousHistory","store","createStore","reducer","render","getElementById"],"mappings":"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","file":"static/js/main.2ddd39ff.chunk.js","sourcesContent":["export const ADD_STEP = 'ADD_STEP';\r\nexport const CHANGE_STEP = 'CHANGE_STEP';\r\nexport const CHANGE_RULE = 'CHANGE_RULE';\r\nexport const CHANGE_UNIFIER = 'CHANGE_UNIFIER';\r\nexport const CHANGE_RENAMING = 'CHANGE_RENAMING';\r\nexport const CHANGE_REFERENCE1 = 'CHANGE_REFERENCE1';\r\nexport const CHANGE_REFERENCE2 = 'CHANGE_REFERENCE2';\r\nexport const DELETE_STEP = 'DELETE_STEP';\r\nexport const INSERT_STEP = 'INSERT_STEP';\r\nexport const STEP_UP = 'STEP_UP';\r\nexport const STEP_DOWN = 'STEP_DOWN';\r\nexport const CHANGE_CONST = 'CHANGE_CONST';\r\nexport const CHANGE_FUN = 'CHANGE_FUN';\r\nexport const CHANGE_PRED = 'CHANGE_PRED';\r\nexport const INPUT_FOCUS = 'INPUT_FOCUS';\r\nexport const INPUT_BLUR = 'INPUT_BLUR';\r\nexport const IMPORT_STATE = 'IMPORT_STATE';\r\nexport const EXPORT_STATE = 'EXPORT_STATE';\r\n\r\nexport let nextStepId = 0;\r\n\r\nexport function setId(value) {\r\n  nextStepId = value;\r\n}\r\n\r\nexport const inputFocus = (text) => ({\r\n  type: INPUT_FOCUS,\r\n  text\r\n})\r\n\r\nexport const inputBlur = (text) => ({\r\n  type: INPUT_BLUR,\r\n  text\r\n})\r\n\r\nexport const addStep = () => ({\r\n  type: ADD_STEP,\r\n  id: nextStepId++,\r\n})\r\n\r\nexport const changeStep = (id, text) => ({\r\n  type: CHANGE_STEP,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeRule = (id, text) => ({\r\n  type: CHANGE_RULE,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeUnifier = (id, text) => ({\r\n  type: CHANGE_UNIFIER,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeRenaming = (id, text) => ({\r\n  type: CHANGE_RENAMING,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeReference1 = (id, text) => ({\r\n  type: CHANGE_REFERENCE1,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeReference2 = (id, text) => ({\r\n  type: CHANGE_REFERENCE2,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeConst = (text) => ({\r\n  type: CHANGE_CONST,\r\n  text\r\n})\r\n\r\nexport const changeFun = (text) => ({\r\n  type: CHANGE_FUN,\r\n  text\r\n})\r\n\r\nexport const changePred = (text) => ({\r\n  type: CHANGE_PRED,\r\n  text\r\n})\r\n\r\nexport const deleteStep = (id) => ({\r\n  type: DELETE_STEP,\r\n  id\r\n})\r\n\r\nexport const insertStep = (position) => ({\r\n  type: INSERT_STEP,\r\n  id: nextStepId++,\r\n  position\r\n})\r\n\r\nexport const moveStepUp = (position) => ({\r\n  type: STEP_UP,\r\n  position\r\n})\r\n\r\nexport const moveStepDown = (position) => ({\r\n  type: STEP_DOWN,\r\n  position\r\n})\r\n\r\nexport const importState = (data) => ({\r\n  type: IMPORT_STATE,\r\n  data\r\n})\r\n\r\nexport const exportState = () => ({\r\n  type: EXPORT_STATE\r\n})","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addStep } from '../actions'\r\n\r\nlet AddStep = ({ dispatch }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        dispatch(addStep())\r\n      }}>\r\n        <button type=\"submit\" className=\"btn btn-outline-success\">\r\n          Add Step\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nAddStep = connect()(AddStep)\r\n\r\nexport default AddStep\r\n","import React from 'react'\r\n\r\nconst ErrorMsg = ({error, input}) => {\r\n    if (error.hasOwnProperty(\"location\")) return (\r\n        <div className=\"invalid-feedback pr-1 pl-1\">\r\n            <b>{input.substring(0, error.location.start.offset)}<mark className=\"text-danger\">\r\n            {input.substring(error.location.start.offset, error.location.end.offset)}</mark>\r\n            {input.substring(error.location.end.offset, input.length)}</b><br/>\r\n            {error.name + \": \" + error.message}\r\n        </div>\r\n    ); else if (error) return (\r\n        <div className=\"invalid-feedback pr-1 pl-1\">\r\n            {error.name + \": \" + error.message}\r\n        </div>\r\n    ); else return null;\r\n}\r\nexport default ErrorMsg","import React from 'react'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\n\r\nconst Reference = ({reference, index, number, onReference, onFocus, onBlur}) => {\r\n    return (\r\n        <div className=\"form-group col-2\">\r\n          <label htmlFor={\"reference\" +number+\"-\" + index}>Premise {number}</label>\r\n          <input type=\"text\" className={`form-control ${reference.error ? \"is-invalid\" : \"\"}`} id={\"reference\" +number+\"-\" + index} \r\n          onChange={e => onReference(e.target.value)} \r\n          onBlur={e => onBlur(e.target.value)}\r\n          onFocus={e => onFocus(e.target.value)}\r\n          value={reference.input} />\r\n          <ErrorMsg error={reference.error} />\r\n        </div>\r\n    );\r\n}\r\nexport default Reference","import React from 'react'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\n\r\nconst Unifier = ({ unifier, index, onUnifier, onFocus, onBlur}) => {\r\n    return (\r\n        <div className=\"form-group col\">\r\n            <label htmlFor={\"unifier-\" + index}>Unifier</label>\r\n            <input type=\"text\" className={`form-control ${unifier.error ? \"is-invalid\" : \"\"}`} id={\"unifier-\" + index}\r\n                onChange={e => onUnifier(e.target.value)} \r\n                onBlur={e => onBlur(e.target.value)}\r\n                onFocus={e => onFocus(e.target.value)}\r\n                value={unifier.input} />\r\n            <ErrorMsg error={unifier.error} input={unifier.input} />\r\n        </div>\r\n    );\r\n}\r\nexport default Unifier","import React from 'react'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\n\r\nconst Renaming = ({renaming, index, onRenaming, onFocus, onBlur}) => {\r\n    return (\r\n        <div className=\"form-group col\">\r\n          <label htmlFor={\"renaming-\" + index}>Renaming</label>\r\n          <input type=\"text\" className={`form-control ${renaming.error ? \"is-invalid\" : \"\"}`} id={\"renaming-\" + index} \r\n          onChange={e => onRenaming(e.target.value)} \r\n          onBlur={e => onBlur(e.target.value)}\r\n          onFocus={e => onFocus(e.target.value)}\r\n          value={renaming.input} />\r\n          <ErrorMsg error={renaming.error} input={renaming.input} />\r\n        </div>\r\n    );\r\n}\r\nexport default Renaming","import React from 'react'\r\nimport Reference from './ReferenceFormGroup'\r\nimport Unifier from './UnifierFormGroup'\r\nimport Renaming from './RenamingFormGroup';\r\n\r\nconst Resolution = ({ reference1, reference2, renaming, unifier, index, onReference1, onReference2, onRenaming, onUnifier, onFocus, onBlur}) => {\r\n    return (\r\n        <div className=\"form-row\">\r\n            <Reference reference={reference1} index={index} number={1} onReference={onReference1} onFocus={onFocus} onBlur={onBlur}/>\r\n            <Renaming renaming={renaming} index={index} onRenaming={onRenaming} onFocus={onFocus} onBlur={onBlur}/>\r\n            <Reference reference={reference2} index={index} number={2} onReference={onReference2} onFocus={onFocus} onBlur={onBlur}/>\r\n            <Unifier unifier={unifier} index={index} onUnifier={onUnifier} onFocus={onFocus} onBlur={onBlur} />\r\n        </div>\r\n    );\r\n}\r\nexport default Resolution","import React from 'react'\r\nimport Reference from './ReferenceFormGroup'\r\nimport Unifier from './UnifierFormGroup'\r\n\r\nconst Factoring = ({ reference, unifier, index, onReference, onUnifier, onFocus, onBlur }) => {\r\n    return (\r\n        <div className=\"form-row\">\r\n            <Reference reference={reference} index={index} number={1} onReference={onReference} onFocus={onFocus} onBlur={onBlur}/>\r\n            <Unifier unifier={unifier} index={index} onUnifier={onUnifier} onFocus={onFocus} onBlur={onBlur}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Factoring","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\nimport Resolution from './ResolutionParams'\r\nimport Factoring from './FactoringParams'\r\n\r\nconst Step = ({ index, step, onChange, onDelete, onInsert, onUp, onDown, onRule, onRenaming, onUnifier, onReference1, onReference2, onBlur, onFocus }) => (\r\n  <div>\r\n    <button type=\"button\" className=\"btn btn-light btn-sm\" onClick={onInsert} style={{ float: \"right\" }}> + </button>\r\n\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\">{index}</span>\r\n      </div>\r\n      <input type=\"text\" name=\"item\" className={`form-control \r\n        ${step.formula.error ? \"is-invalid\" : \"\"}\r\n        ${step.valid ? \"is-valid\" : \"\"}`} \r\n        onChange={e => onChange(e.target.value)}\r\n        onBlur={e => onBlur(e.target.value)}\r\n        onFocus={e => onFocus(e.target.value)}\r\n        value={step.formula.input}\r\n      />\r\n      <div className=\"input-group-append\">\r\n        <select className=\"form-control\" \r\n        onChange={e => onRule(e.target.value)} \r\n        value={step.rule}>\r\n          <option>Assumption</option>\r\n          <option>Resolution</option>\r\n          <option>Factoring</option>\r\n        </select>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary btn-sm\" onClick={onUp} disabled={onUp === null}> ↑ </button>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary btn-sm\" onClick={onDown} disabled={onDown === null}> ↓ </button>\r\n        <button className=\"btn btn-outline-danger\" type=\"button\" onClick={onDelete} >X</button>\r\n      </div>\r\n      <ErrorMsg error={step.formula.error} input={step.formula.input} />\r\n    </div>\r\n    {\r\n      {\r\n        'Resolution': <Resolution reference1={step.reference1} reference2={step.reference2} renaming={step.renaming} unifier={step.unifier}\r\n          index={index} onReference1={onReference1} onReference2={onReference2} onRenaming={onRenaming} onUnifier={onUnifier} \r\n          onFocus={onFocus} onBlur={onBlur}/>,\r\n        'Factoring': <Factoring reference={step.reference2} unifier={step.unifier} index={index} onReference={onReference2} onUnifier={onUnifier}\r\n          onFocus={onFocus} onBlur={onBlur} />\r\n      }[step.rule]\r\n    }\r\n  </div>\r\n);\r\n\r\nStep.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onInsert: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Step","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Step from './Step'\r\n\r\nconst Proof = ({ steps, onStepDelete, onStepChange, onStepInsert, onStepUp, onStepDown, onRuleChange, onRenaming, onUnifier, onReference1, onReference2, inputFocus, inputBlur}) => (\r\n  <div style={{margin:'20px 0px'}}>\r\n    <h2>Proof</h2>\r\n    {steps.order.map((id, index) =>\r\n      <Step\r\n        key={id}\r\n        step = {steps.allSteps.get(id)} \r\n        index={index+1}\r\n        state={steps}\r\n        onChange={(value) => onStepChange(id, value)}\r\n        onRule={(value) => onRuleChange(id, value)}\r\n        onRenaming={(value) => onRenaming(id, value)}\r\n        onUnifier={(value) => onUnifier(id, value)}\r\n        onReference1={(value) => onReference1(id, value)}\r\n        onReference2={(value) => onReference2(id, value)}\r\n        onDelete={() => onStepDelete(id)}\r\n        onInsert={() => onStepInsert(index)}\r\n        onUp={index === 0 ? null : () => onStepUp(index)}\r\n        onDown={index === steps.order.length-1 ? null : () => onStepDown(index)}\r\n        onFocus={(value) => inputFocus(value)}\r\n        onBlur={(value) => inputBlur(value)}\r\n      />\r\n    )}\r\n  </div>\r\n)\r\n\r\nProof.propTypes = {\r\n  steps: PropTypes.shape({\r\n    order: PropTypes.arrayOf(PropTypes.number.isRequired),\r\n    allSteps : PropTypes.instanceOf(Map).isRequired,\r\n    rank: PropTypes.instanceOf(Map).isRequired\r\n  }).isRequired,\r\n  onStepDelete: PropTypes.func.isRequired,\r\n  onStepChange: PropTypes.func.isRequired,\r\n  onRuleChange: PropTypes.func.isRequired,\r\n  onStepInsert: PropTypes.func.isRequired,\r\n  onStepUp: PropTypes.func.isRequired,\r\n  onStepDown: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Proof","import { connect } from 'react-redux'\r\nimport { deleteStep, changeStep, insertStep, moveStepDown, moveStepUp, changeRule, changeReference1, changeReference2, changeRenaming, changeUnifier, inputFocus, inputBlur } from '../actions'\r\nimport Proof from '../components/Proof'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  steps: state.present.steps\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  onStepDelete: deleteStep,\r\n  onStepChange: changeStep,\r\n  onRuleChange: changeRule,\r\n  onRenaming: changeRenaming,\r\n  onUnifier: changeUnifier,\r\n  onReference1: changeReference1,\r\n  onReference2: changeReference2,\r\n  onStepInsert: insertStep,\r\n  onStepUp: moveStepUp,\r\n  onStepDown: moveStepDown,\r\n  inputFocus: inputFocus,\r\n  inputBlur: inputBlur\r\n})\r\n\r\nconst ActualProof = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Proof)\r\n\r\nexport default ActualProof","import React from 'react'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\n\r\nconst Language = ({language, onConstChange, onFunChange, onPredChange, onFocus, onBlur}) => {\r\n    return (\r\n    <div className=\"mt-3\">\r\n        <h2>Language</h2>\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">Constants</span>\r\n            </div>\r\n            <input type=\"text\" className={`form-control ${language.consts.error ? \"is-invalid\" : \"\"}`} name=\"constants\"\r\n            onChange={e => onConstChange(e.target.value)}\r\n            onBlur={e => onBlur(e.target.value)}\r\n            onFocus={e => onFocus(e.target.value)}\r\n            value={language.consts.input}/>\r\n            <ErrorMsg error={language.consts.error} input={language.consts.input} />\r\n        </div>\r\n        \r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">Functions</span>\r\n            </div>\r\n            <input type=\"text\" className={`form-control ${language.funs.error ? \"is-invalid\" : \"\"}`} name=\"functions\" \r\n            onChange={e => onFunChange(e.target.value)}\r\n            onBlur={e => onBlur(e.target.value)}\r\n            onFocus={e => onFocus(e.target.value)} \r\n            value={language.funs.input}/>\r\n            <ErrorMsg error={language.funs.error} input={language.funs.input} />\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">Predicates</span>\r\n            </div>\r\n            <input type=\"text\" className={`form-control ${language.preds.error ? \"is-invalid\" : \"\"}`} name=\"predicates\" \r\n            onChange={e => onPredChange(e.target.value)} \r\n            onBlur={e => onBlur(e.target.value)}\r\n            onFocus={e => onFocus(e.target.value)}\r\n            value={language.preds.input}/>\r\n            <ErrorMsg error={language.preds.error} input={language.preds.input} />\r\n        </div>\r\n\r\n    </div>\r\n)}\r\n\r\nexport default Language","import { connect } from 'react-redux'\r\nimport { changeConst, changeFun, changePred, inputFocus, inputBlur } from '../actions'\r\nimport Language from '../components/Language'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  language: state.present.language\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onConstChange: changeConst,\r\n    onFunChange: changeFun,\r\n    onPredChange: changePred,\r\n    onFocus: inputFocus,\r\n    onBlur: inputBlur\r\n})\r\n\r\nconst ActualLanguage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Language)\r\n\r\nexport default ActualLanguage\r\n","import React from 'react'\r\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n  <div className=\"btn-group\" role=\"group\">\r\n    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={onUndo} disabled={!canUndo}>↶ Undo</button>\r\n    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={onRedo} disabled={!canRedo}>Redo ↷</button>\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n  canUndo: state.past.length > 0,\r\n  canRedo: state.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  onUndo: UndoActionCreators.undo,\r\n  onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import React from 'react'\r\nimport { importState, exportState } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nlet ImportExport = ({ onImport, onExport}) => (\r\n  <div className=\"btn-group float-right\" role=\"group\">\r\n    <label htmlFor=\"fileUpload\" className=\"btn btn-secondary btn-sm mb-0\">⭱ Import</label>\r\n    <input type=\"file\" id=\"fileUpload\" className=\"btn btn-secondary btn-sm d-none\" onChange={\r\n      event => { \r\n        let reader = new FileReader();\r\n        reader.onload = (function(file) {\r\n          return function(e) {\r\n            onImport(e.target.result);\r\n          };\r\n        })(event.target.files[0]);\r\n        reader.readAsText(event.target.files[0]);\r\n        }\r\n      } onClick={ event => event.target.value = \"\"}/>\r\n    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={onExport} >Export ⭳</button>\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state.present\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  onImport: importState,\r\n  onExport: exportState\r\n})\r\n\r\nImportExport = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ImportExport)\r\n\r\nexport default ImportExport\r\n","import React from 'react'\r\nimport AddStep from '../containers/AddStep'\r\nimport ActualProof from '../containers/ActualProof'\r\nimport ActualLanguage from '../containers/ActualLanguage'\r\nimport UndoRedo from '../containers/UndoRedo'\r\nimport ImportExport from '../containers/ImportExport'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <UndoRedo />\r\n    <ImportExport />\r\n    <ActualLanguage />\r\n    <ActualProof />\r\n    <AddStep />\r\n  </div>\r\n)\r\n\r\nexport default App","class Term {\r\n\r\n  constructor(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  toString() {\r\n    return this.name;\r\n  }\r\n\r\n  substitute(map) {\r\n    new Error('Unimplemented');\r\n  }\r\n\r\n  equals() {\r\n    new Error('Unimplemented');\r\n  }\r\n\r\n}\r\n\r\nexport default Term;","import Term from \"./Term\";\r\n\r\nclass Constant extends Term {\r\n\r\n  constructor(name) {\r\n    super(name);\r\n  }\r\n\r\n  equals(other) {\r\n    return other instanceof Constant && this.name === other.name\r\n  }\r\n\r\n  substitute(map){\r\n    return new Constant(this.name);\r\n  }\r\n\r\n}\r\n\r\nexport default Constant;","import Term from \"./Term\";\r\n\r\nclass FunctionTerm extends Term {\r\n\r\n  constructor(name, subts = []) {\r\n    super(name);\r\n    this.subts = subts;\r\n  }\r\n\r\n  toString() {\r\n    return `${ this.name }(${ this.subts.join(', ') })`;\r\n  }\r\n\r\n  equals(other) {\r\n    return other instanceof FunctionTerm &&\r\n      this.name === other.name &&\r\n      this.subts.length === other.subts.length &&\r\n      this.subts.every((subt, i) => subt.equals(other.subts[i]))\r\n  }\r\n\r\n  substitute(map){\r\n    return new FunctionTerm(\r\n      this.name,\r\n      this.subts.map( subt => subt.substitute(map))\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default FunctionTerm;","import Term from \"./Term\";\r\n\r\nclass Variable extends Term {\r\n\r\n  constructor(name) {\r\n    super(name);\r\n  }\r\n\r\n  equals(other) {\r\n    return other instanceof Variable && this.name === other.name\r\n  }\r\n\r\n  substitute(map){\r\n    if (map && map.has(this.name)) {\r\n      return map.get(this.name);\r\n    }\r\n    return new Variable(this.name);\r\n  }\r\n\r\n}\r\n\r\nexport default Variable;","class Formula {\r\n\r\n  constructor(subfs) {\r\n    this.subfs = subfs;\r\n  }\r\n\r\n  subfs() {\r\n    return this.subfs;\r\n  }\r\n\r\n  toString() {\r\n    new Error('Unimplemented');\r\n  }\r\n\r\n  equals(other){ \r\n    new Error('Unimplemented');\r\n  }\r\n\r\n  substitute(map) {\r\n    new Error('Unimplemented');\r\n  }\r\n\r\n}\r\n\r\nexport default Formula;","import Formula from \"./Formula\";\r\n\r\nclass Clause extends Formula {\r\n\r\n  constructor(lits = []) {\r\n    super();\r\n    this.lits = lits;\r\n    this.litsMultiset = null;\r\n  }\r\n\r\n  toString() {\r\n    return this.lits.map( lit => lit.toString() ).join(' ∨ ');\r\n  }\r\n\r\n  equals(other){ \r\n    if (!(other instanceof Clause) || this.lits.length !== other.lits.length) return false;\r\n    for (let tuple of this.getLitsMultiset()){\r\n      if (!other.has(tuple[0])) return false;\r\n      if (other.get(tuple[0]) !== tuple[1]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  substitute(map) {\r\n    return new Clause (\r\n      this.lits.map( lit => lit.substitute(map))\r\n    );\r\n  }\r\n\r\n  getLitsMultiset() {\r\n    if (this.litsMultiset != null) {\r\n      return this.litsMultiset;\r\n    }\r\n    this.litsMultiset = [];\r\n    var contains = false;\r\n    for (let lit of this.lits){\r\n      contains = false;\r\n      for (let tuple of this.litsMultiset){\r\n        if (tuple[0].equals(lit)) {\r\n          tuple[1]++;\r\n          contains = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!contains) {\r\n        this.litsMultiset.push([lit, 1]);\r\n      }\r\n    }\r\n    return this.litsMultiset;\r\n  }\r\n  \r\n  has(key){\r\n    for (const tuple of this.getLitsMultiset()) {\r\n      if (tuple[0].equals(key)){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get(key){\r\n    for (const tuple of this.getLitsMultiset()) {\r\n      if (tuple[0].equals(key)){\r\n        return tuple[1];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  * getResolvents(cl2, renaming, unifier) {\r\n    const lm1 = this.substitute(renaming).substitute(unifier).getLitsMultiset();\r\n    const lm2 = cl2.substitute(unifier).getLitsMultiset();\r\n    for (const [lit1, _] of lm1){\r\n      const nlit1 = lit1.negation();\r\n      for (const [lit2, _] of lm2){\r\n        if (nlit1.equals(lit2)){\r\n          yield new Clause(lm1.flatMap(([l1, n1]) => new Array(lit1 === l1 ? n1 - 1 : n1).fill(l1))\r\n          .concat(lm2.flatMap(([l2, n2]) => new Array(lit2 === l2 ? n2 - 1 : n2).fill(l2))));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isResolventOf(cl1, cl2, renaming, unifier){\r\n    for (const resolvent of cl1.getResolvents(cl2, renaming, unifier)) {\r\n      if (this.equals(resolvent)){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  * getFactors(unifier) {\r\n    const lm = this.substitute(unifier).getLitsMultiset();\r\n    for (const [lit, n] of lm) {\r\n      if (n >= 2) {\r\n        yield new Clause(lm.flatMap(([lit1, n1]) => new Array(lit1 === lit ? n1 - 1 : n1).fill(lit1)));\r\n      }\r\n    }\r\n  }\r\n\r\n  isFactorOf(cl, unifier){\r\n    for (const factor of cl.getFactors(unifier)){\r\n      if (this.equals(factor)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport default Clause;","import Formula from \"./Formula\";\r\n\r\nclass Literal extends Formula {\r\n\r\n  constructor(neg, name, terms = []) {\r\n    super();\r\n    this.neg = neg;\r\n    this.name = name;\r\n    this.terms = terms;\r\n  }\r\n\r\n  toString() {\r\n    let res = '';\r\n    if (this.neg) res += '¬';\r\n    return res + this.name + '(' + this.terms.map(term => term.toString()).join(', ') + ')';\r\n  }\r\n\r\n  equals(other) {\r\n    return other instanceof Literal &&\r\n      this.neg === other.neg &&\r\n      this.name === other.name &&\r\n      this.terms.length === other.terms.length &&\r\n      this.terms.every((term, i) => term.equals(other.terms[i]))\r\n  }\r\n\r\n  negation(){\r\n    return new Literal(\r\n      !this.neg,\r\n      this.name,\r\n      this.terms\r\n    )\r\n  }\r\n\r\n  substitute(map){\r\n    return new Literal(\r\n      this.neg,\r\n      this.name,\r\n      this.terms.map( term => term.substitute(map))\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Literal;","import { CHANGE_STEP, CHANGE_RULE, CHANGE_RENAMING, CHANGE_REFERENCE1, CHANGE_REFERENCE2, CHANGE_UNIFIER} from '../actions'\r\nimport { parseClause, parseSubstitution } from '@fmfi-uk-1-ain-412/js-fol-parser';\r\nimport { Variable, Constant, Function, Literal, Clause } from '../model/index'\r\n\r\nexport const step = (step, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_STEP: {\r\n      return {\r\n        ...step,\r\n        formula: {\r\n          ...step.formula,\r\n          input: action.text\r\n        }\r\n      };\r\n    }\r\n\r\n    case CHANGE_RULE: {\r\n      return { ...step, rule: action.text };\r\n    }\r\n\r\n    case CHANGE_RENAMING: {\r\n      return {\r\n        ...step,\r\n        renaming:{\r\n          ...step.renaming,\r\n          input: action.text\r\n        }\r\n      };\r\n    }\r\n\r\n    case CHANGE_UNIFIER: {\r\n      return { ...step, unifier: {\r\n        ...step.unifier,\r\n        input: action.text\r\n      }};\r\n    }\r\n\r\n    case CHANGE_REFERENCE1: {\r\n      return { ...step, reference1 : {\r\n        ...step.reference1,\r\n        input: action.text\r\n      }};\r\n    }\r\n\r\n    case CHANGE_REFERENCE2: {\r\n      return { ...step, reference2 : {\r\n        ...step.reference2,\r\n        input: action.text\r\n      }};\r\n    }\r\n\r\n    default:\r\n      return step\r\n  }\r\n}\r\n\r\nexport function validateRenaming(renaming, language) {\r\n  renaming.error = \"\";\r\n  try {\r\n    if (renaming.input !== \"\") {\r\n      let subs = parseSubstitution(renaming.input, getSymbols(language), getFactories(language));\r\n      renaming.object = new Map(subs);\r\n      for (const [key, value] of renaming.object) {\r\n        if (!(value instanceof Variable)) {\r\n          renaming.error = {\r\n            name: \"TypeError\",\r\n            message: \"\\\"\" + key + \"\\\" is renamed to \\\"\" + value + \"\\\", which is not a variable\"\r\n          }\r\n        }\r\n      }\r\n      if (!renaming.error) {\r\n        renaming.error = validateSubs(subs);\r\n      }\r\n    } else {\r\n      renaming.object = undefined;\r\n    }\r\n  } catch (e) {\r\n    renaming.error = e;\r\n  }\r\n  return [renaming.error ? false : true, renaming];\r\n}\r\n\r\nexport function validateUnifier(unifier, language) {\r\n  unifier.error = \"\";\r\n  try {\r\n    if (unifier.input !== \"\") {\r\n      let subs = parseSubstitution(unifier.input, getSymbols(language), getFactories(language));\r\n      unifier.object = new Map(subs);\r\n      unifier.error = validateSubs(subs);\r\n    } else {\r\n      unifier.object = undefined;\r\n    }\r\n  } catch (e) {\r\n    unifier.error = e;\r\n  }\r\n  return [unifier.error ? false : true, unifier];\r\n}\r\n\r\nexport function validateReference(reference, id, state) {\r\n  reference.error = \"\";\r\n  if (reference.input !== \"\") {\r\n    if (state.rank.get(id) < parseInt(reference.input) || parseInt(reference.input) < 1) {\r\n      reference.error = {\r\n        name: \"IndexError\",\r\n        message: \"Index out of range.\"\r\n      };\r\n    } else if (isNaN(parseInt(reference.input))) {\r\n      reference.error = {\r\n        name: \"SyntaxError\",\r\n        message: \"Expected number but \\\"\" + reference.input + \"\\\" found.\"\r\n      };\r\n    } else {\r\n      reference.object = parseInt(reference.input) - 1;\r\n      reference.error = \"\"\r\n    }\r\n  } else {\r\n    reference.error = {\r\n      name: \"EmptyError\",\r\n      message: \"This field cannot be empty\"\r\n    }\r\n  }\r\n  return [reference.error ? false : true, reference];\r\n}\r\n\r\nexport function validateSubs(subs) {\r\n  for (let i = 0; i < subs.length; i++) {\r\n    for (let j = i + 1; j < subs.length; j++) {\r\n      if (subs[i][0] === subs[j][0]) {\r\n        return {\r\n          name: \"DuplicityError\",\r\n          message: \"Symbol \\\"\" + subs[i][0] + \"\\\" is already being substituted\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport function validateClause(formula, language) {\r\n  formula.error = \"\";\r\n  try {\r\n    formula.object = parseClause(\r\n      formula.input,\r\n      getSymbols(language),\r\n      getFactories(language)\r\n    );\r\n  } catch (e) {\r\n    formula.error = e;\r\n  }\r\n  return [formula.error ? false : true, formula];\r\n}\r\n\r\nexport function getFactories(language) {\r\n  function checkArity(symbol, args, arityMap, { expected }) {\r\n    const a = arityMap.get(symbol);\r\n    if (args.length !== a) {\r\n      expected(`${a} argument${(a == 1 ? '' : 's')} to ${symbol}`);\r\n    }\r\n  }\r\n  return {\r\n    variable: (symbol, _) =>\r\n      new Variable(symbol),\r\n    constant: (symbol, _) =>\r\n      new Constant(symbol),\r\n    functionApplication: (funSymbol, args, ee) => {\r\n      checkArity(funSymbol, args, language.funs.object, ee);\r\n      return new Function(funSymbol, args);\r\n    },\r\n    literal: (negated, predSymbol, args, ee) => {\r\n      checkArity(predSymbol, args, language.preds.object, ee);\r\n      return new Literal(negated, predSymbol, args);\r\n    },\r\n    clause: (literals, _) =>\r\n      new Clause(literals)\r\n  }\r\n}\r\n\r\nexport function getSymbols(language) {\r\n  const nonLogicalSymbols = new Set([...language.consts.object, ...language.funs.object.keys(), ...language.preds.object.keys()]);\r\n  return {\r\n    isConstant: (symbol) =>\r\n      language.consts.object.has(symbol),\r\n    isFunction: (symbol) =>\r\n      language.funs.object.has(symbol),\r\n    isPredicate: (symbol) =>\r\n      language.preds.object.has(symbol),\r\n    isVariable: (symbol) =>\r\n      !nonLogicalSymbols.has(symbol),\r\n  }\r\n}","import { ADD_STEP, CHANGE_STEP, DELETE_STEP, INSERT_STEP, STEP_UP, STEP_DOWN, CHANGE_RULE, CHANGE_RENAMING, CHANGE_REFERENCE1, CHANGE_REFERENCE2, CHANGE_UNIFIER, CHANGE_CONST, CHANGE_FUN, CHANGE_PRED, IMPORT_STATE } from '../actions'\r\nimport { step, validateReference, validateRenaming, validateUnifier, validateClause } from './step'\r\n\r\nconst newStep = {\r\n  formula: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  rule: \"Assumption\",\r\n  reference1: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  renaming: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  reference2: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  unifier: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  valid: false\r\n};\r\n\r\nconst steps = (state = { order: [], allSteps: new Map(), rank: new Map() }, action = { type: undefined }, language) => {\r\n  switch (action.type) {\r\n    case ADD_STEP:\r\n      return Object.assign({}, state, {\r\n        order: [\r\n          ...state.order,\r\n          action.id,\r\n        ],\r\n        allSteps: new Map([\r\n          ...state.allSteps,\r\n          [action.id, newStep]\r\n        ]),\r\n        rank: new Map([\r\n          ...state.rank,\r\n          [action.id, state.order.length]\r\n        ])\r\n      })\r\n\r\n    case CHANGE_RULE:\r\n    case CHANGE_RENAMING:\r\n    case CHANGE_UNIFIER:\r\n    case CHANGE_REFERENCE1:\r\n    case CHANGE_REFERENCE2:\r\n    case CHANGE_STEP: {\r\n      const allSteps = new Map(state.allSteps);\r\n      let from = state.rank.get(action.id);\r\n      let checked = new Set();\r\n      for (let i = from; i < state.order.length; i++) {\r\n        let id = state.order[i];\r\n        let s = allSteps.get(id);\r\n        if (i === from) {\r\n          checked.add(i);\r\n          allSteps.set(id, validateStep(\r\n            step(s, action),\r\n            id,\r\n            state,\r\n            language\r\n          ));\r\n        }\r\n        else if ((s.rule === \"Factoring\" && checked.has(s.reference2.object)) ||\r\n          (s.rule === \"Resolution\" && (checked.has(s.reference2.object) || checked.has(s.reference1.object)))) {\r\n          checked.add(i);\r\n          allSteps.set(id, validateStep(\r\n            allSteps.get(id),\r\n            id,\r\n            { ...state, allSteps },\r\n            language\r\n          ));\r\n        }\r\n      }\r\n      return { ...state, allSteps };\r\n    }\r\n\r\n    case DELETE_STEP: {\r\n      let delOrder = state.rank.get(action.id);\r\n      let newSteps = new Map([...state.allSteps]);\r\n      newSteps.delete(action.id);\r\n      let newOrder = [...state.order.filter(id => id !== action.id)];\r\n      const position = state.rank.get(action.id);\r\n      let newRank = new Map([...state.rank]);\r\n      newRank.delete(action.id);\r\n      for (let [key, value] of newRank.entries()) {\r\n        if (value > delOrder) {\r\n          newRank.set(key, value - 1)\r\n        }\r\n      }\r\n      for (let i = position + 1; i < state.order.length; i++) {\r\n        const id = state.order[i];\r\n        let step = newSteps.get(id);\r\n        newSteps.set(id, {\r\n          ...step,\r\n          reference1: checkReferenceAfterDelete({ ...step.reference1 }, position),\r\n          reference2: checkReferenceAfterDelete({ ...step.reference2 }, position)\r\n        })\r\n      }\r\n      let newState = { ...state, rank: newRank, order: newOrder, allSteps: newSteps };\r\n      for (let i = position; i < newState.order.length; i++) {\r\n        let id = newState.order[i];\r\n        newSteps.set(id, validateStep(\r\n          newSteps.get(id),\r\n          id,\r\n          { ...newState, newSteps },\r\n          language\r\n        ));\r\n      }\r\n      return {\r\n        ...newState,\r\n        allSteps: newSteps\r\n      };\r\n    }\r\n\r\n    case INSERT_STEP: {\r\n      let newRank = new Map([...state.rank]);\r\n      for (let [key, value] of newRank.entries()) {\r\n        if (value >= action.position) {\r\n          newRank.set(key, value + 1)\r\n        }\r\n      }\r\n      newRank.set(action.id, action.position);\r\n      let newOrder = [\r\n        ...state.order.slice(0, action.position),\r\n        action.id,\r\n        ...state.order.slice(action.position)\r\n      ];\r\n      let newSteps = new Map([\r\n        ...state.allSteps,\r\n        [action.id, newStep]\r\n      ]);\r\n      for (let i = action.position + 1; i < state.order.length; i++) {\r\n        const id = state.order[i];\r\n        let step = newSteps.get(id);\r\n        newSteps.set(id, {\r\n          ...step,\r\n          reference1: checkReferenceAfterInsert({ ...step.reference1 }, action.position),\r\n          reference2: checkReferenceAfterInsert({ ...step.reference2 }, action.position)\r\n        })\r\n      }\r\n      let newState = { ...state, rank: newRank, order: newOrder, allSteps: newSteps };\r\n      for (let i = action.position + 1; i < newState.order.length; i++) {\r\n        let id = newState.order[i];\r\n        newSteps.set(id, validateStep(\r\n          newSteps.get(id),\r\n          id,\r\n          { ...newState, newSteps },\r\n          language\r\n        ));\r\n      }\r\n      return {\r\n        ...newState,\r\n        allSteps: newSteps\r\n      }\r\n    }\r\n\r\n    case STEP_UP: {\r\n      let newRank = new Map([...state.rank]);\r\n      newRank.set(state.order[action.position], action.position - 1);\r\n      newRank.set(state.order[action.position - 1], action.position);\r\n      let newOrder = [\r\n        ...state.order.slice(0, action.position - 1),\r\n        state.order[action.position],\r\n        state.order[action.position - 1],\r\n        ...state.order.slice(action.position + 1)\r\n      ]\r\n      let newSteps = new Map([...state.allSteps]);\r\n      for (let i = action.position - 1; i < state.order.length; i++) {\r\n        const id = state.order[i];\r\n        let step = newSteps.get(id);\r\n        newSteps.set(id, {\r\n          ...step,\r\n          reference1: checkReferenceAfterMove({ ...step.reference1 }, action.position, action.position - 1),\r\n          reference2: checkReferenceAfterMove({ ...step.reference2 }, action.position, action.position - 1)\r\n        })\r\n      }\r\n      let newState = { ...state, rank: newRank, order: newOrder, allSteps: newSteps };\r\n      let checked = new Set();\r\n      for (let i = action.position - 1; i < newState.order.length; i++) {\r\n        let id = newState.order[i];\r\n        let step = newSteps.get(id);\r\n        if (i === action.position - 1 || i === action.position ||\r\n          (step.rule === \"Factoring\" && checked.has(step.reference2.object)) ||\r\n          (step.rule === \"Resolution\" && (checked.has(step.reference2.object) || checked.has(step.reference1.object)))) {\r\n          checked.add(i);\r\n          newSteps.set(id, validateStep(\r\n            newSteps.get(id),\r\n            id,\r\n            { ...newState, newSteps },\r\n            language\r\n          ));\r\n        }\r\n      }\r\n      return {\r\n        ...newState,\r\n        allSteps: newSteps\r\n      }\r\n    }\r\n\r\n    case STEP_DOWN: {\r\n      let newRank = new Map([...state.rank]);\r\n      newRank.set(state.order[action.position], action.position + 1);\r\n      newRank.set(state.order[action.position + 1], action.position);\r\n      let newOrder = [\r\n        ...state.order.slice(0, action.position),\r\n        state.order[action.position + 1],\r\n        state.order[action.position],\r\n        ...state.order.slice(action.position + 2)\r\n      ]\r\n      let newSteps = new Map([...state.allSteps]);\r\n      for (let i = action.position; i < state.order.length; i++) {\r\n        const id = state.order[i];\r\n        let step = newSteps.get(id);\r\n        newSteps.set(id, {\r\n          ...step,\r\n          reference1: checkReferenceAfterMove({ ...step.reference1 }, action.position, action.position + 1),\r\n          reference2: checkReferenceAfterMove({ ...step.reference2 }, action.position, action.position + 1)\r\n        })\r\n      }\r\n      let newState = { ...state, rank: newRank, order: newOrder, allSteps: newSteps };\r\n      let checked = new Set();\r\n      for (let i = action.position; i < newState.order.length; i++) {\r\n        let id = newState.order[i];\r\n        let step = newSteps.get(id);\r\n        if (i === action.position || i === action.position + 1 ||\r\n          (step.rule === \"Factoring\" && checked.has(step.reference2.object)) ||\r\n          (step.rule === \"Resolution\" && (checked.has(step.reference2.object) || checked.has(step.reference1.object)))) {\r\n          checked.add(i);\r\n          newSteps.set(id, validateStep(\r\n            newSteps.get(id),\r\n            id,\r\n            { ...newState, newSteps },\r\n            language\r\n          ));\r\n        }\r\n      }\r\n      return {\r\n        ...newState,\r\n        allSteps: newSteps\r\n      }\r\n    }\r\n\r\n    case CHANGE_CONST:\r\n    case CHANGE_FUN:\r\n    case CHANGE_PRED: \r\n    case IMPORT_STATE: {\r\n      const allSteps = new Map(state.allSteps);\r\n      for (let id of state.order) {\r\n        allSteps.set(id, validateStep(\r\n          step(allSteps.get(id), action),\r\n          id,\r\n          { ...state, allSteps },\r\n          language\r\n        ));\r\n      }\r\n      return { ...state, allSteps };\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction checkReferenceAfterInsert(reference, position) {\r\n  if (reference.object >= position) {\r\n    reference = {\r\n      object: reference.object + 1,\r\n      input: reference.object + 2 + \"\",\r\n      error: \"\"\r\n    }\r\n  }\r\n  return reference;\r\n}\r\n\r\nfunction checkReferenceAfterDelete(reference, position) {\r\n  if (reference.object > position) {\r\n    reference = {\r\n      object: reference.object - 1,\r\n      input: reference.object + \"\",\r\n      error: \"\"\r\n    }\r\n  } else if (reference.object === position) {\r\n    reference = {\r\n      object: undefined,\r\n      input: \"\",\r\n      error: \"\"\r\n    }\r\n  }\r\n  return reference;\r\n}\r\n\r\nfunction checkReferenceAfterMove(reference, position1, position2) {\r\n  if (reference.object === position1) {\r\n    reference = {\r\n      object: position2,\r\n      input: position2 + 1 + \"\",\r\n      error: \"\"\r\n    }\r\n  } else if (reference.object === position2) {\r\n    reference = {\r\n      object: position1,\r\n      input: position1 + 1 + \"\",\r\n      error: \"\"\r\n    }\r\n  }\r\n  return reference;\r\n}\r\n\r\nfunction validateStep(step, id, state, language) {\r\n  let reference1 = validateReference({ ...step.reference1 }, id, state);\r\n  let reference2 = validateReference({ ...step.reference2 }, id, state);\r\n  let renaming = validateRenaming({ ...step.renaming }, language);\r\n  let unifier = validateUnifier({ ...step.unifier }, language);\r\n  let formula = validateClause({ ...step.formula }, language)\r\n  let newStep = {\r\n    ...step,\r\n    reference1: reference1[1],\r\n    reference2: reference2[1],\r\n    renaming: renaming[1],\r\n    unifier: unifier[1],\r\n    formula: formula[1]\r\n  }\r\n  switch (step.rule) {\r\n    case \"Factoring\": {\r\n      if (!reference2[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n      const premise = getPremise(reference2[1].object, state);\r\n      if (!premise || !formula[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n\r\n      if (newStep.formula.object.isFactorOf(premise.formula.object, newStep.unifier.object)) {\r\n        return { ...newStep, valid: true, formula: { ...newStep.formula, error: \"\" } };\r\n      } else {\r\n        return {\r\n          ...newStep, valid: false, formula: {\r\n            ...newStep.formula, error: {\r\n              name: \"LogicError\",\r\n              message: \"This clause is not valid factor of clause \" + newStep.reference2.input\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    case \"Resolution\": {\r\n      if (!reference2[0] || !reference1[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n      const premise1 = getPremise(reference1[1].object, state);\r\n      const premise2 = getPremise(reference2[1].object, state);\r\n      if (!premise1 || !premise2 || !formula[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n      if (newStep.formula.object.isResolventOf(premise1.formula.object, premise2.formula.object, newStep.renaming.object, newStep.unifier.object)) {\r\n        return { ...newStep, valid: true, formula: { ...newStep.formula, error: \"\" } };\r\n      } else {\r\n        return {\r\n          ...newStep, valid: false, formula: {\r\n            ...newStep.formula, error: {\r\n              name: \"LogicError\",\r\n              message: \"This clause is not valid resolvent of clauses \" + newStep.reference1.input + \" and \" + newStep.reference2.input\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    case \"Assumption\": {\r\n      if (!formula[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n      return { ...newStep, valid: true };\r\n    }\r\n\r\n    default:\r\n      return { ...newStep };\r\n  }\r\n}\r\n\r\nfunction getPremise(reference, state) {\r\n  const premise = state.allSteps.get(state.order[parseInt(reference)]);\r\n  if (premise.valid) {\r\n    return premise;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default steps;","import { CHANGE_CONST, CHANGE_FUN, CHANGE_PRED } from '../actions';\r\nimport { parseConstants, parseFunctions, parsePredicates } from '@fmfi-uk-1-ain-412/js-fol-parser';\r\n\r\n\r\nconst language = (state = { consts: { input: \"\", object: new Set(), error: \"\", symbols: [] }, funs: { input: \"\", object: new Map(), error: \"\", symbols: [] }, preds: { input: \"\", object: new Map(), error: \"\", symbols: [] } }, action = { type: undefined }) => {\r\n    switch (action.type) {\r\n        case CHANGE_CONST:\r\n            let consts = { ...state.consts, input: action.text, error: \"\" };\r\n            try {\r\n                if (action.text !== \"\") {\r\n                    consts.symbols = parseConstants(action.text)\r\n                    consts.object = new Set(consts.symbols);\r\n                } else {\r\n                    consts.symbols = [];\r\n                    consts.object = new Set();\r\n                }\r\n\r\n            } catch (e) {\r\n                consts.error = e;\r\n            }\r\n            return { ...state, \r\n                consts: validateConsts(consts),\r\n                funs: validateFuns(state.funs, consts),\r\n                preds: validatePreds(state.preds, state.funs, consts)\r\n            };\r\n\r\n        case CHANGE_FUN:\r\n            let funs = { ...state.funs, input: action.text, error: \"\" };\r\n            try {\r\n                if (action.text !== \"\") {\r\n                    funs.symbols = parseFunctions(action.text);\r\n                    funs.object = new Map(funs.symbols.map(obj => [obj.name, obj.arity]));\r\n                } else {\r\n                    funs.symbols = [];\r\n                    funs.object = new Map();\r\n                }\r\n            } catch (e) {\r\n                funs.error = e;\r\n            }\r\n            return { ...state, \r\n                funs: validateFuns(funs, state.consts),\r\n                preds: validatePreds(state.preds, funs, state.consts)\r\n            };\r\n\r\n        case CHANGE_PRED:\r\n            let preds = { ...state.preds, input: action.text, error: \"\" };\r\n            try {\r\n                preds.symbols = parsePredicates(action.text);\r\n                preds.object = new Map(preds.symbols.map(obj => [obj.name, obj.arity]));\r\n            } catch (e) {\r\n                preds.error = e;\r\n            }\r\n            return { ...state, \r\n                preds: validatePreds(preds, state.funs, state.consts)\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction validSymbols(symbols) {\r\n    return symbols.error === \"\" && symbols.input !== \"\"\r\n}\r\n\r\nfunction validateConsts(consts) {\r\n    if (!validSymbols(consts) && consts.error.name !== \"DuplicityError\") {\r\n        return consts;\r\n    } else {\r\n        for (let i = 0; i < consts.symbols.length; i++) {\r\n            for (let j = i+1; j < consts.symbols.length; j++) {\r\n                if (consts.symbols[i] === consts.symbols[j]) {\r\n                    return {\r\n                        ...consts,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + consts.symbols[i] + \"\\\" is already a constant\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        ...consts,\r\n        error: \"\"\r\n    }\r\n}\r\n\r\nfunction validateFuns(funs, consts) {\r\n    if (!validSymbols(funs) && funs.error.name !== \"DuplicityError\") {\r\n        return funs;\r\n    } else {\r\n        for (let i = 0; i < funs.symbols.length; i++) {\r\n            for (let j = i+1; j < funs.symbols.length; j++) {\r\n                if (funs.symbols[i].name === funs.symbols[j].name) {\r\n                    return {\r\n                        ...funs,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + funs.symbols[i].name + \"\\\" is already a function\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n    } \r\n    if (validSymbols(consts)) {\r\n        for (const [symbol1, _] of funs.object) {\r\n            for (const symbol2 of consts.object) {\r\n                if (symbol1 === symbol2) {\r\n                    return {\r\n                        ...funs,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + symbol1 + \"\\\" is already a constant\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        ...funs,\r\n        error: \"\"\r\n    }\r\n}\r\n\r\nfunction validatePreds(preds, funs, consts) {\r\n    if (!validSymbols(preds) && preds.error.name !== \"DuplicityError\") {\r\n        return preds;\r\n    } else {\r\n        for (let i = 0; i < preds.symbols.length; i++) {\r\n            for (let j = i+1; j < preds.symbols.length; j++) {\r\n                if (preds.symbols[i].name === preds.symbols[j].name) {\r\n                    return {\r\n                        ...preds,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + preds.symbols[i].name + \"\\\" is already a predicate\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (validSymbols(funs)) {\r\n        for (const [symbol1, _] of funs.object) {\r\n            for (const [symbol2, _] of preds.object) {\r\n                if (symbol1 === symbol2) {\r\n                    return {\r\n                        ...preds,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + symbol1 + \"\\\" is already a function\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    } \r\n    if (validSymbols(consts)) {\r\n        for (const symbol1 of consts.object) {\r\n            for (const [symbol2, _] of preds.object) {\r\n                if (symbol1 === symbol2) {\r\n                    return {\r\n                        ...preds,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + symbol1 + \"\\\" is already a constant\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        ...preds,\r\n        error: \"\"\r\n    }\r\n\r\n}\r\n\r\nexport default language;","import undoable from 'redux-undo';\r\nimport { ADD_STEP, CHANGE_STEP, DELETE_STEP, INSERT_STEP, STEP_UP, STEP_DOWN, CHANGE_RULE, CHANGE_RENAMING, CHANGE_REFERENCE1, CHANGE_REFERENCE2, CHANGE_UNIFIER, CHANGE_CONST, CHANGE_FUN, CHANGE_PRED, INPUT_FOCUS, INPUT_BLUR, EXPORT_STATE, IMPORT_STATE, nextStepId, setId } from '../actions'\r\nimport steps from './steps'\r\nimport language from './language'\r\n\r\nconst initialCombinedState = {\r\n  language: language(),\r\n  steps: steps(),\r\n  inputChange: { originValue: \"\" }\r\n};\r\n\r\nfunction app(state = initialCombinedState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_CONST:\r\n    case CHANGE_FUN:\r\n    case CHANGE_PRED: {\r\n      const languageState = language(state.language, action);\r\n      const stepsState = steps(state.steps, action, languageState);\r\n      return { ...state, language: languageState, steps: stepsState };\r\n    }\r\n    case INPUT_FOCUS: {\r\n      return { ...state, inputChange: { originValue: action.text } }\r\n    }\r\n    case ADD_STEP:\r\n    case CHANGE_STEP:\r\n    case DELETE_STEP:\r\n    case INSERT_STEP:\r\n    case STEP_UP:\r\n    case STEP_DOWN:\r\n    case CHANGE_RULE:\r\n    case CHANGE_REFERENCE1:\r\n    case CHANGE_REFERENCE2:\r\n    case CHANGE_RENAMING:\r\n    case CHANGE_UNIFIER: {\r\n      const stepsState = steps(state.steps, action, state.language);\r\n      return { ...state, language: state.language, steps: stepsState }\r\n    }\r\n    case EXPORT_STATE: {\r\n      let link = document.createElement('a');\r\n      link.setAttribute(\"download\", \"resolution_state\");\r\n      let stateCopy = {\r\n        ...state, \r\n        language: {\r\n          ...state.language,\r\n          consts: {\r\n            ...state.language.consts,\r\n            object: Array.from(state.language.consts.object)\r\n          },\r\n          funs: {\r\n            ...state.language.funs,\r\n            object: Array.from(state.language.funs.object.entries())\r\n          },\r\n          preds: {\r\n            ...state.language.preds,\r\n            object: Array.from(state.language.preds.object.entries())\r\n          }\r\n        },\r\n        steps: {\r\n          ...state.steps,\r\n          allSteps: Array.from(state.steps.allSteps.entries()),\r\n          rank: Array.from(state.steps.rank.entries())\r\n        }\r\n      }\r\n      let data = new Blob([JSON.stringify({state: stateCopy, id: nextStepId})], {type: 'text/plain'});\r\n      let url = window.URL.createObjectURL(data);\r\n      link.href = url;\r\n      link.click();\r\n      return state;\r\n    }\r\n    case IMPORT_STATE: {\r\n      let data = JSON.parse(action.data);\r\n      let state = data.state\r\n      setId(data.id);\r\n      state.steps.allSteps = new Map(state.steps.allSteps);\r\n      state.steps.rank = new Map(state.steps.rank);\r\n      state.language.consts.object = new Set(state.language.consts.object);\r\n      state.language.funs.object = new Map(state.language.funs.object);\r\n      state.language.preds.object = new Map(state.language.preds.object);\r\n      state.steps = steps(state.steps, action, state.language);\r\n      return state;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n\r\n  }\r\n}\r\n\r\nconst undoableState = undoable(app, {\r\n  filter: function filterActions(action, currentState, previousHistory) {\r\n    switch (action.type) {\r\n      case CHANGE_STEP:\r\n      case CHANGE_CONST:\r\n      case CHANGE_FUN:\r\n      case CHANGE_PRED:\r\n      case CHANGE_REFERENCE1:\r\n      case CHANGE_REFERENCE2:\r\n      case CHANGE_RENAMING:\r\n      case CHANGE_UNIFIER:\r\n      case INPUT_FOCUS: {\r\n        return false\r\n      }\r\n\r\n      case INPUT_BLUR: {\r\n        if (action.text !== currentState.inputChange.originValue) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n})\r\n\r\nexport default undoableState;","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/App'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}