{"version":3,"sources":["actions/index.js","containers/AddStep.js","components/ErrorMsg.js","components/ReferenceFormGroup.js","components/UnifierFormGroup.js","components/RenamingFormGroup.js","components/ResolutionParams.js","components/FactoringParams.js","components/Step.js","components/Proof.js","containers/ActualProof.js","components/Language.js","containers/ActualLanguage.js","containers/UndoRedo.js","containers/ImportExport.js","components/Help.js","components/App.js","model/term/Term.js","model/term/Term.Constant.js","model/term/Term.FunctionTerm.js","model/term/Term.Variable.js","model/formula/Formula.js","model/formula/Formula.Clause.js","model/formula/Formula.Literal.js","reducers/step.js","reducers/steps.js","reducers/language.js","reducers/index.js","index.js"],"names":["ADD_STEP","CHANGE_STEP","CHANGE_RULE","CHANGE_UNIFIER","CHANGE_RENAMING","CHANGE_REFERENCE1","CHANGE_REFERENCE2","DELETE_STEP","INSERT_STEP","STEP_UP","STEP_DOWN","CHANGE_CONST","CHANGE_FUN","CHANGE_PRED","INPUT_FOCUS","IMPORT_STATE","EXPORT_STATE","inputFocus","text","type","inputBlur","AddStep","dispatch","onSubmit","e","preventDefault","className","connect","ErrorMsg","error","input","hasOwnProperty","substring","location","start","offset","end","length","name","message","Reference","reference","index","number","onReference","onFocus","onBlur","htmlFor","id","onChange","target","value","Unifier","unifier","onUnifier","Renaming","renaming","onRenaming","Resolution","reference1","reference2","onReference1","onReference2","Factoring","Step","step","onDelete","onInsert","onUp","onDown","onRule","formula","valid","rule","onClick","disabled","Proof","steps","onStepDelete","onStepChange","onStepInsert","onStepUp","onStepDown","onRuleChange","order","map","key","allSteps","get","state","mapDispatchToProps","position","ActualProof","present","Language","language","onConstChange","onFunChange","onPredChange","consts","funs","preds","ActualLanguage","UndoRedo","canUndo","canRedo","onUndo","onRedo","role","UndoActionCreators","undo","redo","past","future","ImportExport","onImport","onExport","event","reader","FileReader","onload","files","result","readAsText","data","Help","App","Term","this","Error","Constant","other","FunctionTerm","subts","join","every","subt","i","equals","substitute","Variable","has","Formula","subfs","Clause","lits","litsMultiset","lit","toString","getLitsMultiset","tuple","contains","push","cl2","lm1","lm2","lit1","nlit1","negation","lit2","flatMap","l1","n1","Array","fill","concat","l2","n2","cl1","getResolvents","resolvent","lm","cl","getFactors","factor","Literal","neg","terms","res","term","action","validateReference","rank","parseInt","isNaN","object","validateSubs","subs","j","getFactories","checkArity","symbol","args","arityMap","expected","a","variable","_","constant","functionApplication","funSymbol","ee","Function","literal","negated","predSymbol","clause","literals","getSymbols","nonLogicalSymbols","Set","keys","isConstant","isFunction","isPredicate","isVariable","newStep","undefined","checkReferenceAfterInsert","checkReferenceAfterDelete","checkReferenceAfterMove","position1","position2","validateStep","parseSubstitution","Map","validateRenaming","validateUnifier","parseClause","validateClause","premise","getPremise","isFactorOf","premise1","premise2","isResolventOf","Object","assign","from","checked","s","add","set","delOrder","newSteps","delete","newOrder","filter","newRank","entries","newState","slice","validSymbols","symbols","validateConsts","validateFuns","symbol1","validatePreds","symbol2","parseConstants","parseFunctions","obj","arity","parsePredicates","initialCombinedState","inputChange","originValue","undoableState","undoable","languageState","stepsState","link","document","createElement","setAttribute","stateCopy","Blob","JSON","stringify","url","window","URL","createObjectURL","href","click","parse","currentState","previousHistory","store","createStore","reducer","render","getElementById"],"mappings":"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","file":"static/js/main.bdde9aca.chunk.js","sourcesContent":["export const ADD_STEP = 'ADD_STEP';\r\nexport const CHANGE_STEP = 'CHANGE_STEP';\r\nexport const CHANGE_RULE = 'CHANGE_RULE';\r\nexport const CHANGE_UNIFIER = 'CHANGE_UNIFIER';\r\nexport const CHANGE_RENAMING = 'CHANGE_RENAMING';\r\nexport const CHANGE_REFERENCE1 = 'CHANGE_REFERENCE1';\r\nexport const CHANGE_REFERENCE2 = 'CHANGE_REFERENCE2';\r\nexport const DELETE_STEP = 'DELETE_STEP';\r\nexport const INSERT_STEP = 'INSERT_STEP';\r\nexport const STEP_UP = 'STEP_UP';\r\nexport const STEP_DOWN = 'STEP_DOWN';\r\nexport const CHANGE_CONST = 'CHANGE_CONST';\r\nexport const CHANGE_FUN = 'CHANGE_FUN';\r\nexport const CHANGE_PRED = 'CHANGE_PRED';\r\nexport const INPUT_FOCUS = 'INPUT_FOCUS';\r\nexport const INPUT_BLUR = 'INPUT_BLUR';\r\nexport const IMPORT_STATE = 'IMPORT_STATE';\r\nexport const EXPORT_STATE = 'EXPORT_STATE';\r\n\r\nexport const inputFocus = (text) => ({\r\n  type: INPUT_FOCUS,\r\n  text\r\n})\r\n\r\nexport const inputBlur = (text) => ({\r\n  type: INPUT_BLUR,\r\n  text\r\n})\r\n\r\nexport const addStep = () => ({\r\n  type: ADD_STEP\r\n})\r\n\r\nexport const changeStep = (id, text) => ({\r\n  type: CHANGE_STEP,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeRule = (id, text) => ({\r\n  type: CHANGE_RULE,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeUnifier = (id, text) => ({\r\n  type: CHANGE_UNIFIER,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeRenaming = (id, text) => ({\r\n  type: CHANGE_RENAMING,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeReference1 = (id, text) => ({\r\n  type: CHANGE_REFERENCE1,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeReference2 = (id, text) => ({\r\n  type: CHANGE_REFERENCE2,\r\n  id,\r\n  text\r\n})\r\n\r\nexport const changeConst = (text) => ({\r\n  type: CHANGE_CONST,\r\n  text\r\n})\r\n\r\nexport const changeFun = (text) => ({\r\n  type: CHANGE_FUN,\r\n  text\r\n})\r\n\r\nexport const changePred = (text) => ({\r\n  type: CHANGE_PRED,\r\n  text\r\n})\r\n\r\nexport const deleteStep = (id) => ({\r\n  type: DELETE_STEP,\r\n  id\r\n})\r\n\r\nexport const insertStep = (position) => ({\r\n  type: INSERT_STEP,\r\n  position\r\n})\r\n\r\nexport const moveStepUp = (position) => ({\r\n  type: STEP_UP,\r\n  position\r\n})\r\n\r\nexport const moveStepDown = (position) => ({\r\n  type: STEP_DOWN,\r\n  position\r\n})\r\n\r\nexport const importState = (data) => ({\r\n  type: IMPORT_STATE,\r\n  data\r\n})\r\n\r\nexport const exportState = () => ({\r\n  type: EXPORT_STATE\r\n})","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addStep } from '../actions'\r\n\r\nlet AddStep = ({ dispatch }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        dispatch(addStep())\r\n      }}>\r\n        <button type=\"submit\" className=\"btn btn-outline-success btn-sm mt-1\">\r\n          Add Step\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nAddStep = connect()(AddStep)\r\n\r\nexport default AddStep\r\n","import React from 'react'\r\n\r\nconst ErrorMsg = ({error, input}) => {\r\n    if (error.hasOwnProperty(\"location\")) return (\r\n        <div className=\"invalid-feedback pr-1 pl-1\">\r\n            <b>{input.substring(0, error.location.start.offset)}<mark className=\"text-danger\">\r\n            {input.substring(error.location.start.offset, error.location.end.offset)}</mark>\r\n            {input.substring(error.location.end.offset, input.length)}</b><br/>\r\n            {error.name + \": \" + error.message}\r\n        </div>\r\n    ); else if (error) return (\r\n        <div className=\"invalid-feedback pr-1 pl-1\">\r\n            {error.name + \": \" + error.message}\r\n        </div>\r\n    ); else return null;\r\n}\r\nexport default ErrorMsg","import React from 'react'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\n\r\nconst Reference = ({reference, index, number, onReference, onFocus, onBlur}) => {\r\n    return (\r\n        <div className=\"form-group col-2 mb-2\">\r\n          <label className=\"mb-1 fs-sm\" htmlFor={\"reference\" +number+\"-\" + index}>Premise {number}</label>\r\n          <input type=\"text\" className={`form-control form-control-sm ${reference.error ? \"is-invalid\" : \"\"}`} id={\"reference\" +number+\"-\" + index} \r\n          onChange={e => onReference(e.target.value)} \r\n          onBlur={e => onBlur(e.target.value)}\r\n          onFocus={e => onFocus(e.target.value)}\r\n          value={reference.input} />\r\n          <ErrorMsg error={reference.error} />\r\n        </div>\r\n    );\r\n}\r\nexport default Reference","import React from 'react'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\n\r\nconst Unifier = ({ unifier, index, onUnifier, onFocus, onBlur}) => {\r\n    return (\r\n        <div className=\"form-group col mb-2\">\r\n            <label className=\"mb-1 fs-sm\" htmlFor={\"unifier-\" + index}>Unifier</label>\r\n            <input type=\"text\" className={`form-control form-control-sm ${unifier.error ? \"is-invalid\" : \"\"}`} id={\"unifier-\" + index}\r\n                onChange={e => onUnifier(e.target.value)} \r\n                onBlur={e => onBlur(e.target.value)}\r\n                onFocus={e => onFocus(e.target.value)}\r\n                value={unifier.input} />\r\n            <ErrorMsg error={unifier.error} input={unifier.input} />\r\n        </div>\r\n    );\r\n}\r\nexport default Unifier","import React from 'react'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\n\r\nconst Renaming = ({renaming, index, onRenaming, onFocus, onBlur}) => {\r\n    return (\r\n        <div className=\"form-group col mb-2\">\r\n          <label className=\"mb-1 fs-sm\" htmlFor={\"renaming-\" + index}>Renaming</label>\r\n          <input type=\"text\" className={`form-control form-control-sm ${renaming.error ? \"is-invalid\" : \"\"}`} id={\"renaming-\" + index} \r\n          onChange={e => onRenaming(e.target.value)} \r\n          onBlur={e => onBlur(e.target.value)}\r\n          onFocus={e => onFocus(e.target.value)}\r\n          value={renaming.input} />\r\n          <ErrorMsg error={renaming.error} input={renaming.input} />\r\n        </div>\r\n    );\r\n}\r\nexport default Renaming","import React from 'react'\r\nimport Reference from './ReferenceFormGroup'\r\nimport Unifier from './UnifierFormGroup'\r\nimport Renaming from './RenamingFormGroup';\r\n\r\nconst Resolution = ({ reference1, reference2, renaming, unifier, index, onReference1, onReference2, onRenaming, onUnifier, onFocus, onBlur}) => {\r\n    return (\r\n        <div className=\"form-row\">\r\n            <Reference reference={reference1} index={index} number={1} onReference={onReference1} onFocus={onFocus} onBlur={onBlur}/>\r\n            <Renaming renaming={renaming} index={index} onRenaming={onRenaming} onFocus={onFocus} onBlur={onBlur}/>\r\n            <Reference reference={reference2} index={index} number={2} onReference={onReference2} onFocus={onFocus} onBlur={onBlur}/>\r\n            <Unifier unifier={unifier} index={index} onUnifier={onUnifier} onFocus={onFocus} onBlur={onBlur} />\r\n        </div>\r\n    );\r\n}\r\nexport default Resolution","import React from 'react'\r\nimport Reference from './ReferenceFormGroup'\r\nimport Unifier from './UnifierFormGroup'\r\n\r\nconst Factoring = ({ reference, unifier, index, onReference, onUnifier, onFocus, onBlur }) => {\r\n    return (\r\n        <div className=\"form-row\">\r\n            <Reference reference={reference} index={index} number={1} onReference={onReference} onFocus={onFocus} onBlur={onBlur}/>\r\n            <Unifier unifier={unifier} index={index} onUnifier={onUnifier} onFocus={onFocus} onBlur={onBlur}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Factoring","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\nimport Resolution from './ResolutionParams'\r\nimport Factoring from './FactoringParams'\r\n\r\nconst Step = ({ index, step, onChange, onDelete, onInsert, onUp, onDown, onRule, onRenaming, onUnifier, onReference1, onReference2, onBlur, onFocus }) => (\r\n  <div className=\"step\">\r\n    <div className=\"input-group mb-2 input-group-sm\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\">{index}</span>\r\n      </div>\r\n      <input type=\"text\" name=\"item\" className={`form-control \r\n        ${step.formula.error ? \"is-invalid\" : \"\"}\r\n        ${step.valid ? \"is-valid\" : \"\"}`} \r\n        onChange={e => onChange(e.target.value)}\r\n        onBlur={e => onBlur(e.target.value)}\r\n        onFocus={e => onFocus(e.target.value)}\r\n        value={step.formula.input}\r\n      />\r\n      <div className=\"input-group-append input-group-sm\">\r\n        <select className=\"form-control\" \r\n        onChange={e => onRule(e.target.value)} \r\n        value={step.rule}>\r\n          <option>Assumption</option>\r\n          <option>Resolution</option>\r\n          <option>Factoring</option>\r\n        </select>\r\n        <button type=\"button\" className=\"btn btn-outline-success btn-sm\" onClick={onInsert}> + </button>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary btn-sm\" onClick={onUp} disabled={onUp === null}> ↑ </button>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary btn-sm\" onClick={onDown} disabled={onDown === null}> ↓ </button>\r\n        <button className=\"btn btn-outline-danger\" type=\"button\" onClick={onDelete} >X</button>\r\n      </div>\r\n      <ErrorMsg error={step.formula.error} input={step.formula.input} />\r\n    </div>\r\n    {\r\n      {\r\n        'Resolution': <Resolution reference1={step.reference1} reference2={step.reference2} renaming={step.renaming} unifier={step.unifier}\r\n          index={index} onReference1={onReference1} onReference2={onReference2} onRenaming={onRenaming} onUnifier={onUnifier} \r\n          onFocus={onFocus} onBlur={onBlur}/>,\r\n        'Factoring': <Factoring reference={step.reference2} unifier={step.unifier} index={index} onReference={onReference2} onUnifier={onUnifier}\r\n          onFocus={onFocus} onBlur={onBlur} />\r\n      }[step.rule]\r\n    }\r\n  </div>\r\n);\r\n\r\nStep.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onInsert: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Step","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Step from './Step'\r\n\r\nconst Proof = ({ steps, onStepDelete, onStepChange, onStepInsert, onStepUp, onStepDown, onRuleChange, onRenaming, onUnifier, onReference1, onReference2, inputFocus, inputBlur}) => (\r\n  <div className=\"mt-2\">\r\n    <h2 className=\"mb-0\">Proof</h2>\r\n    {steps.order.map((id, index) =>\r\n      <Step\r\n        key={id}\r\n        step = {steps.allSteps.get(id)} \r\n        index={index+1}\r\n        state={steps}\r\n        onChange={(value) => onStepChange(id, value)}\r\n        onRule={(value) => onRuleChange(id, value)}\r\n        onRenaming={(value) => onRenaming(id, value)}\r\n        onUnifier={(value) => onUnifier(id, value)}\r\n        onReference1={(value) => onReference1(id, value)}\r\n        onReference2={(value) => onReference2(id, value)}\r\n        onDelete={() => onStepDelete(id)}\r\n        onInsert={() => onStepInsert(index)}\r\n        onUp={index === 0 ? null : () => onStepUp(index)}\r\n        onDown={index === steps.order.length-1 ? null : () => onStepDown(index)}\r\n        onFocus={(value) => inputFocus(value)}\r\n        onBlur={(value) => inputBlur(value)}\r\n      />\r\n    )}\r\n  </div>\r\n)\r\n\r\nProof.propTypes = {\r\n  steps: PropTypes.shape({\r\n    order: PropTypes.arrayOf(PropTypes.number.isRequired),\r\n    allSteps : PropTypes.instanceOf(Map).isRequired,\r\n    rank: PropTypes.instanceOf(Map).isRequired\r\n  }).isRequired,\r\n  onStepDelete: PropTypes.func.isRequired,\r\n  onStepChange: PropTypes.func.isRequired,\r\n  onRuleChange: PropTypes.func.isRequired,\r\n  onStepInsert: PropTypes.func.isRequired,\r\n  onStepUp: PropTypes.func.isRequired,\r\n  onStepDown: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Proof","import { connect } from 'react-redux'\r\nimport { deleteStep, changeStep, insertStep, moveStepDown, moveStepUp, changeRule, changeReference1, changeReference2, changeRenaming, changeUnifier, inputFocus, inputBlur } from '../actions'\r\nimport Proof from '../components/Proof'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  steps: state.present.steps\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  onStepDelete: deleteStep,\r\n  onStepChange: changeStep,\r\n  onRuleChange: changeRule,\r\n  onRenaming: changeRenaming,\r\n  onUnifier: changeUnifier,\r\n  onReference1: changeReference1,\r\n  onReference2: changeReference2,\r\n  onStepInsert: insertStep,\r\n  onStepUp: moveStepUp,\r\n  onStepDown: moveStepDown,\r\n  inputFocus: inputFocus,\r\n  inputBlur: inputBlur\r\n})\r\n\r\nconst ActualProof = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Proof)\r\n\r\nexport default ActualProof","import React from 'react'\r\nimport ErrorMsg from '../components/ErrorMsg'\r\n\r\nconst Language = ({language, onConstChange, onFunChange, onPredChange, onFocus, onBlur}) => {\r\n    return (\r\n    <div className=\"mt-2\">\r\n        <h2>Language</h2>\r\n        <div className=\"input-group mb-2 input-group-sm\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">Constants</span>\r\n            </div>\r\n            <input type=\"text\" className={`form-control ${language.consts.error ? \"is-invalid\" : \"\"}`} name=\"constants\"\r\n            onChange={e => onConstChange(e.target.value)}\r\n            onBlur={e => onBlur(e.target.value)}\r\n            onFocus={e => onFocus(e.target.value)}\r\n            value={language.consts.input}/>\r\n            <ErrorMsg error={language.consts.error} input={language.consts.input} />\r\n        </div>\r\n        \r\n        <div className=\"input-group mb-2 input-group-sm\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">Functions</span>\r\n            </div>\r\n            <input type=\"text\" className={`form-control ${language.funs.error ? \"is-invalid\" : \"\"}`} name=\"functions\" \r\n            onChange={e => onFunChange(e.target.value)}\r\n            onBlur={e => onBlur(e.target.value)}\r\n            onFocus={e => onFocus(e.target.value)} \r\n            value={language.funs.input}/>\r\n            <ErrorMsg error={language.funs.error} input={language.funs.input} />\r\n        </div>\r\n        <div className=\"input-group mb-2 input-group-sm\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">Predicates</span>\r\n            </div>\r\n            <input type=\"text\" className={`form-control ${language.preds.error ? \"is-invalid\" : \"\"}`} name=\"predicates\" \r\n            onChange={e => onPredChange(e.target.value)} \r\n            onBlur={e => onBlur(e.target.value)}\r\n            onFocus={e => onFocus(e.target.value)}\r\n            value={language.preds.input}/>\r\n            <ErrorMsg error={language.preds.error} input={language.preds.input} />\r\n        </div>\r\n\r\n    </div>\r\n)}\r\n\r\nexport default Language","import { connect } from 'react-redux'\r\nimport { changeConst, changeFun, changePred, inputFocus, inputBlur } from '../actions'\r\nimport Language from '../components/Language'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  language: state.present.language\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onConstChange: changeConst,\r\n    onFunChange: changeFun,\r\n    onPredChange: changePred,\r\n    onFocus: inputFocus,\r\n    onBlur: inputBlur\r\n})\r\n\r\nconst ActualLanguage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Language)\r\n\r\nexport default ActualLanguage\r\n","import React from 'react'\r\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n  <div className=\"btn-group\" role=\"group\">\r\n    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={onUndo} disabled={!canUndo}>↶ Undo</button>\r\n    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={onRedo} disabled={!canRedo}>Redo ↷</button>\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n  canUndo: state.past.length > 0,\r\n  canRedo: state.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  onUndo: UndoActionCreators.undo,\r\n  onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import React from 'react'\r\nimport { importState, exportState } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nlet ImportExport = ({ onImport, onExport}) => (\r\n  <div className=\"float-right\">\r\n    <label htmlFor=\"fileUpload\" className=\"btn btn-secondary btn-sm mb-0 mr-1\">Import</label>\r\n    <input type=\"file\" id=\"fileUpload\" className=\"btn btn-secondary btn-sm d-none\" onChange={\r\n      event => { \r\n        let reader = new FileReader();\r\n        reader.onload = (function(file) {\r\n          return function(e) {\r\n            onImport(e.target.result);\r\n          };\r\n        })(event.target.files[0]);\r\n        reader.readAsText(event.target.files[0]);\r\n        }\r\n      } onClick={ event => event.target.value = \"\"}/>\r\n    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={onExport} >Export</button>\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state.present\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  onImport: importState,\r\n  onExport: exportState\r\n})\r\n\r\nImportExport = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ImportExport)\r\n\r\nexport default ImportExport\r\n","import React from 'react'\r\n\r\nconst Help = () => (\r\n  <div className=\"mt-2 d-inline-block \">\r\n    <h4>Help</h4>\r\n    <div className=\"mb-2\">\r\n      <p className=\"mb-0\">Language - Declarations of non-logical symbols:</p>\r\n      <ul className=\"fs-sm\">\r\n        <li >Symbols declarations must be comma-separated</li>\r\n        <li >A constant declaration is just the constant symbol</li>\r\n        <li >A function or predicate symbol declaration has the form symbol/arity (e.g. f/1)</li>\r\n      </ul>\r\n    </div>\r\n    <div>\r\n      <p className=\"mb-0\">Proof - Alternative ways of writing logical symbols:</p>\r\n      <ul className=\"fs-sm\">\r\n        <li >Disjunction: ∨, ||, |, \\/</li>\r\n        <li >Negation: ¬, -, !, ~</li>\r\n        <li >Substitution: ↦, ->, ⟼, |-> or (var, term)</li>\r\n        <li >Empty clause: □, ▫︎, ◽︎, ◻︎, ⬜︎, ▢, ⊥, [], _|_</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n);\r\nexport default Help","import React from 'react'\r\nimport AddStep from '../containers/AddStep'\r\nimport ActualProof from '../containers/ActualProof'\r\nimport ActualLanguage from '../containers/ActualLanguage'\r\nimport UndoRedo from '../containers/UndoRedo'\r\nimport ImportExport from '../containers/ImportExport'\r\nimport Help from '../components/Help'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <UndoRedo />\r\n    <ImportExport />\r\n    <ActualLanguage />\r\n    <ActualProof />\r\n    <AddStep />\r\n    <Help />\r\n  </div>\r\n)\r\n\r\nexport default App","class Term {\r\n\r\n  constructor(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  toString() {\r\n    return this.name;\r\n  }\r\n\r\n  substitute(map) {\r\n    new Error('Unimplemented');\r\n  }\r\n\r\n  equals() {\r\n    new Error('Unimplemented');\r\n  }\r\n\r\n}\r\n\r\nexport default Term;","import Term from \"./Term\";\r\n\r\nclass Constant extends Term {\r\n\r\n  constructor(name) {\r\n    super(name);\r\n  }\r\n\r\n  equals(other) {\r\n    return other instanceof Constant && this.name === other.name\r\n  }\r\n\r\n  substitute(map){\r\n    return new Constant(this.name);\r\n  }\r\n\r\n}\r\n\r\nexport default Constant;","import Term from \"./Term\";\r\n\r\nclass FunctionTerm extends Term {\r\n\r\n  constructor(name, subts = []) {\r\n    super(name);\r\n    this.subts = subts;\r\n  }\r\n\r\n  toString() {\r\n    return `${ this.name }(${ this.subts.join(', ') })`;\r\n  }\r\n\r\n  equals(other) {\r\n    return other instanceof FunctionTerm &&\r\n      this.name === other.name &&\r\n      this.subts.length === other.subts.length &&\r\n      this.subts.every((subt, i) => subt.equals(other.subts[i]))\r\n  }\r\n\r\n  substitute(map){\r\n    return new FunctionTerm(\r\n      this.name,\r\n      this.subts.map( subt => subt.substitute(map))\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default FunctionTerm;","import Term from \"./Term\";\r\n\r\nclass Variable extends Term {\r\n\r\n  constructor(name) {\r\n    super(name);\r\n  }\r\n\r\n  equals(other) {\r\n    return other instanceof Variable && this.name === other.name\r\n  }\r\n\r\n  substitute(map){\r\n    if (map && map.has(this.name)) {\r\n      return map.get(this.name);\r\n    }\r\n    return new Variable(this.name);\r\n  }\r\n\r\n}\r\n\r\nexport default Variable;","class Formula {\r\n\r\n  constructor(subfs) {\r\n    this.subfs = subfs;\r\n  }\r\n\r\n  subfs() {\r\n    return this.subfs;\r\n  }\r\n\r\n  toString() {\r\n    new Error('Unimplemented');\r\n  }\r\n\r\n  equals(other){ \r\n    new Error('Unimplemented');\r\n  }\r\n\r\n  substitute(map) {\r\n    new Error('Unimplemented');\r\n  }\r\n\r\n}\r\n\r\nexport default Formula;","import Formula from \"./Formula\";\r\n\r\nclass Clause extends Formula {\r\n\r\n  constructor(lits = []) {\r\n    super();\r\n    this.lits = lits;\r\n    this.litsMultiset = null;\r\n  }\r\n\r\n  toString() {\r\n    return this.lits.map( lit => lit.toString() ).join(' ∨ ');\r\n  }\r\n\r\n  equals(other){ \r\n    if (!(other instanceof Clause) || this.lits.length !== other.lits.length) return false;\r\n    for (let tuple of this.getLitsMultiset()){\r\n      if (!other.has(tuple[0])) return false;\r\n      if (other.get(tuple[0]) !== tuple[1]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  substitute(map) {\r\n    return new Clause (\r\n      this.lits.map( lit => lit.substitute(map))\r\n    );\r\n  }\r\n\r\n  getLitsMultiset() {\r\n    if (this.litsMultiset != null) {\r\n      return this.litsMultiset;\r\n    }\r\n    this.litsMultiset = [];\r\n    var contains = false;\r\n    for (let lit of this.lits){\r\n      contains = false;\r\n      for (let tuple of this.litsMultiset){\r\n        if (tuple[0].equals(lit)) {\r\n          tuple[1]++;\r\n          contains = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!contains) {\r\n        this.litsMultiset.push([lit, 1]);\r\n      }\r\n    }\r\n    return this.litsMultiset;\r\n  }\r\n  \r\n  has(key){\r\n    for (const tuple of this.getLitsMultiset()) {\r\n      if (tuple[0].equals(key)){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get(key){\r\n    for (const tuple of this.getLitsMultiset()) {\r\n      if (tuple[0].equals(key)){\r\n        return tuple[1];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  * getResolvents(cl2, renaming, unifier) {\r\n    const lm1 = this.substitute(renaming).substitute(unifier).getLitsMultiset();\r\n    const lm2 = cl2.substitute(unifier).getLitsMultiset();\r\n    for (const [lit1, _] of lm1){\r\n      const nlit1 = lit1.negation();\r\n      for (const [lit2, _] of lm2){\r\n        if (nlit1.equals(lit2)){\r\n          yield new Clause(lm1.flatMap(([l1, n1]) => new Array(lit1 === l1 ? n1 - 1 : n1).fill(l1))\r\n          .concat(lm2.flatMap(([l2, n2]) => new Array(lit2 === l2 ? n2 - 1 : n2).fill(l2))));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isResolventOf(cl1, cl2, renaming, unifier){\r\n    for (const resolvent of cl1.getResolvents(cl2, renaming, unifier)) {\r\n      if (this.equals(resolvent)){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  * getFactors(unifier) {\r\n    const lm = this.substitute(unifier).getLitsMultiset();\r\n    for (const [lit, n] of lm) {\r\n      if (n >= 2) {\r\n        yield new Clause(lm.flatMap(([lit1, n1]) => new Array(lit1 === lit ? n1 - 1 : n1).fill(lit1)));\r\n      }\r\n    }\r\n  }\r\n\r\n  isFactorOf(cl, unifier){\r\n    for (const factor of cl.getFactors(unifier)){\r\n      if (this.equals(factor)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport default Clause;","import Formula from \"./Formula\";\r\n\r\nclass Literal extends Formula {\r\n\r\n  constructor(neg, name, terms = []) {\r\n    super();\r\n    this.neg = neg;\r\n    this.name = name;\r\n    this.terms = terms;\r\n  }\r\n\r\n  toString() {\r\n    let res = '';\r\n    if (this.neg) res += '¬';\r\n    return res + this.name + '(' + this.terms.map(term => term.toString()).join(', ') + ')';\r\n  }\r\n\r\n  equals(other) {\r\n    return other instanceof Literal &&\r\n      this.neg === other.neg &&\r\n      this.name === other.name &&\r\n      this.terms.length === other.terms.length &&\r\n      this.terms.every((term, i) => term.equals(other.terms[i]))\r\n  }\r\n\r\n  negation(){\r\n    return new Literal(\r\n      !this.neg,\r\n      this.name,\r\n      this.terms\r\n    )\r\n  }\r\n\r\n  substitute(map){\r\n    return new Literal(\r\n      this.neg,\r\n      this.name,\r\n      this.terms.map( term => term.substitute(map))\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Literal;","import { CHANGE_STEP, CHANGE_RULE, CHANGE_RENAMING, CHANGE_REFERENCE1, CHANGE_REFERENCE2, CHANGE_UNIFIER} from '../actions'\r\nimport { parseClause, parseSubstitution } from '@fmfi-uk-1-ain-412/js-fol-parser';\r\nimport { Variable, Constant, Function, Literal, Clause } from '../model/index'\r\n\r\nexport const step = (step, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_STEP: {\r\n      return {\r\n        ...step,\r\n        formula: {\r\n          ...step.formula,\r\n          input: action.text\r\n        }\r\n      };\r\n    }\r\n\r\n    case CHANGE_RULE: {\r\n      return { ...step, rule: action.text };\r\n    }\r\n\r\n    case CHANGE_RENAMING: {\r\n      return {\r\n        ...step,\r\n        renaming:{\r\n          ...step.renaming,\r\n          input: action.text\r\n        }\r\n      };\r\n    }\r\n\r\n    case CHANGE_UNIFIER: {\r\n      return { ...step, unifier: {\r\n        ...step.unifier,\r\n        input: action.text\r\n      }};\r\n    }\r\n\r\n    case CHANGE_REFERENCE1: {\r\n      return { ...step, reference1 : {\r\n        ...step.reference1,\r\n        input: action.text\r\n      }};\r\n    }\r\n\r\n    case CHANGE_REFERENCE2: {\r\n      return { ...step, reference2 : {\r\n        ...step.reference2,\r\n        input: action.text\r\n      }};\r\n    }\r\n\r\n    default:\r\n      return step\r\n  }\r\n}\r\n\r\nexport function validateRenaming(renaming, language) {\r\n  renaming.error = \"\";\r\n  try {\r\n    if (renaming.input !== \"\") {\r\n      let subs = parseSubstitution(renaming.input, getSymbols(language), getFactories(language));\r\n      renaming.object = new Map(subs);\r\n      for (const [key, value] of renaming.object) {\r\n        if (!(value instanceof Variable)) {\r\n          renaming.error = {\r\n            name: \"TypeError\",\r\n            message: \"\\\"\" + key + \"\\\" is renamed to \\\"\" + value + \"\\\", which is not a variable\"\r\n          }\r\n        }\r\n      }\r\n      if (!renaming.error) {\r\n        renaming.error = validateSubs(subs);\r\n      }\r\n    } else {\r\n      renaming.object = undefined;\r\n    }\r\n  } catch (e) {\r\n    renaming.error = e;\r\n  }\r\n  return [renaming.error ? false : true, renaming];\r\n}\r\n\r\nexport function validateUnifier(unifier, language) {\r\n  unifier.error = \"\";\r\n  try {\r\n    if (unifier.input !== \"\") {\r\n      let subs = parseSubstitution(unifier.input, getSymbols(language), getFactories(language));\r\n      unifier.object = new Map(subs);\r\n      unifier.error = validateSubs(subs);\r\n    } else {\r\n      unifier.object = undefined;\r\n    }\r\n  } catch (e) {\r\n    unifier.error = e;\r\n  }\r\n  return [unifier.error ? false : true, unifier];\r\n}\r\n\r\nexport function validateReference(reference, id, state) {\r\n  reference.error = \"\";\r\n  if (reference.input !== \"\") {\r\n    if (state.rank.get(id) < parseInt(reference.input) || parseInt(reference.input) < 1) {\r\n      reference.error = {\r\n        name: \"IndexError\",\r\n        message: \"Index out of range.\"\r\n      };\r\n    } else if (isNaN(parseInt(reference.input))) {\r\n      reference.error = {\r\n        name: \"SyntaxError\",\r\n        message: \"Expected number but \\\"\" + reference.input + \"\\\" found.\"\r\n      };\r\n    } else {\r\n      reference.object = parseInt(reference.input) - 1;\r\n      reference.error = \"\"\r\n    }\r\n  } else {\r\n    reference.error = {\r\n      name: \"EmptyError\",\r\n      message: \"This field cannot be empty\"\r\n    }\r\n  }\r\n  return [reference.error ? false : true, reference];\r\n}\r\n\r\nexport function validateSubs(subs) {\r\n  for (let i = 0; i < subs.length; i++) {\r\n    for (let j = i + 1; j < subs.length; j++) {\r\n      if (subs[i][0] === subs[j][0]) {\r\n        return {\r\n          name: \"DuplicityError\",\r\n          message: \"Symbol \\\"\" + subs[i][0] + \"\\\" is already being substituted\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport function validateClause(formula, language) {\r\n  formula.error = \"\";\r\n  try {\r\n    formula.object = parseClause(\r\n      formula.input,\r\n      getSymbols(language),\r\n      getFactories(language)\r\n    );\r\n  } catch (e) {\r\n    formula.error = e;\r\n  }\r\n  return [formula.error ? false : true, formula];\r\n}\r\n\r\nexport function getFactories(language) {\r\n  function checkArity(symbol, args, arityMap, { expected }) {\r\n    const a = arityMap.get(symbol);\r\n    if (args.length !== a) {\r\n      expected(`${a} argument${(a == 1 ? '' : 's')} to ${symbol}`);\r\n    }\r\n  }\r\n  return {\r\n    variable: (symbol, _) =>\r\n      new Variable(symbol),\r\n    constant: (symbol, _) =>\r\n      new Constant(symbol),\r\n    functionApplication: (funSymbol, args, ee) => {\r\n      checkArity(funSymbol, args, language.funs.object, ee);\r\n      return new Function(funSymbol, args);\r\n    },\r\n    literal: (negated, predSymbol, args, ee) => {\r\n      checkArity(predSymbol, args, language.preds.object, ee);\r\n      return new Literal(negated, predSymbol, args);\r\n    },\r\n    clause: (literals, _) =>\r\n      new Clause(literals)\r\n  }\r\n}\r\n\r\nexport function getSymbols(language) {\r\n  const nonLogicalSymbols = new Set([...language.consts.object, ...language.funs.object.keys(), ...language.preds.object.keys()]);\r\n  return {\r\n    isConstant: (symbol) =>\r\n      language.consts.object.has(symbol),\r\n    isFunction: (symbol) =>\r\n      language.funs.object.has(symbol),\r\n    isPredicate: (symbol) =>\r\n      language.preds.object.has(symbol),\r\n    isVariable: (symbol) =>\r\n      !nonLogicalSymbols.has(symbol),\r\n  }\r\n}","import { ADD_STEP, CHANGE_STEP, DELETE_STEP, INSERT_STEP, STEP_UP, STEP_DOWN, CHANGE_RULE, CHANGE_RENAMING, CHANGE_REFERENCE1, CHANGE_REFERENCE2, CHANGE_UNIFIER, CHANGE_CONST, CHANGE_FUN, CHANGE_PRED, IMPORT_STATE } from '../actions'\r\nimport { step, validateReference, validateRenaming, validateUnifier, validateClause } from './step'\r\n\r\nconst newStep = {\r\n  formula: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  rule: \"Assumption\",\r\n  reference1: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  renaming: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  reference2: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  unifier: {\r\n    input: \"\",\r\n    object: undefined,\r\n    error: \"\"\r\n  },\r\n  valid: false\r\n};\r\n\r\nconst steps = (state = { order: [], allSteps: new Map(), rank: new Map(), id: 0 }, action = { type: undefined }, language) => {\r\n  switch (action.type) {\r\n    case ADD_STEP:\r\n      return Object.assign({}, state, {\r\n        order: [\r\n          ...state.order,\r\n          state.id,\r\n        ],\r\n        allSteps: new Map([\r\n          ...state.allSteps,\r\n          [state.id, newStep]\r\n        ]),\r\n        rank: new Map([\r\n          ...state.rank,\r\n          [state.id, state.order.length]\r\n        ]),\r\n        id: state.id+1\r\n      })\r\n\r\n    case CHANGE_RULE:\r\n    case CHANGE_RENAMING:\r\n    case CHANGE_UNIFIER:\r\n    case CHANGE_REFERENCE1:\r\n    case CHANGE_REFERENCE2:\r\n    case CHANGE_STEP: {\r\n      const allSteps = new Map(state.allSteps);\r\n      let from = state.rank.get(action.id);\r\n      let checked = new Set();\r\n      for (let i = from; i < state.order.length; i++) {\r\n        let id = state.order[i];\r\n        let s = allSteps.get(id);\r\n        if (i === from) {\r\n          checked.add(i);\r\n          allSteps.set(id, validateStep(\r\n            step(s, action),\r\n            id,\r\n            state,\r\n            language\r\n          ));\r\n        }\r\n        else if ((s.rule === \"Factoring\" && checked.has(s.reference2.object)) ||\r\n          (s.rule === \"Resolution\" && (checked.has(s.reference2.object) || checked.has(s.reference1.object)))) {\r\n          checked.add(i);\r\n          allSteps.set(id, validateStep(\r\n            allSteps.get(id),\r\n            id,\r\n            { ...state, allSteps },\r\n            language\r\n          ));\r\n        }\r\n      }\r\n      return { ...state, allSteps };\r\n    }\r\n\r\n    case DELETE_STEP: {\r\n      let delOrder = state.rank.get(action.id);\r\n      let newSteps = new Map([...state.allSteps]);\r\n      newSteps.delete(action.id);\r\n      let newOrder = [...state.order.filter(id => id !== action.id)];\r\n      const position = state.rank.get(action.id);\r\n      let newRank = new Map([...state.rank]);\r\n      newRank.delete(action.id);\r\n      for (let [key, value] of newRank.entries()) {\r\n        if (value > delOrder) {\r\n          newRank.set(key, value - 1)\r\n        }\r\n      }\r\n      for (let i = position + 1; i < state.order.length; i++) {\r\n        const id = state.order[i];\r\n        let step = newSteps.get(id);\r\n        newSteps.set(id, {\r\n          ...step,\r\n          reference1: checkReferenceAfterDelete({ ...step.reference1 }, position),\r\n          reference2: checkReferenceAfterDelete({ ...step.reference2 }, position)\r\n        })\r\n      }\r\n      let newState = { ...state, rank: newRank, order: newOrder, allSteps: newSteps };\r\n      for (let i = position; i < newState.order.length; i++) {\r\n        let id = newState.order[i];\r\n        newSteps.set(id, validateStep(\r\n          newSteps.get(id),\r\n          id,\r\n          { ...newState, newSteps },\r\n          language\r\n        ));\r\n      }\r\n      return {\r\n        ...newState,\r\n        allSteps: newSteps\r\n      };\r\n    }\r\n\r\n    case INSERT_STEP: {\r\n      let newRank = new Map([...state.rank]);\r\n      for (let [key, value] of newRank.entries()) {\r\n        if (value >= action.position) {\r\n          newRank.set(key, value + 1)\r\n        }\r\n      }\r\n      newRank.set(state.id, action.position);\r\n      let newOrder = [\r\n        ...state.order.slice(0, action.position),\r\n        state.id,\r\n        ...state.order.slice(action.position)\r\n      ];\r\n      let newSteps = new Map([\r\n        ...state.allSteps,\r\n        [state.id, newStep]\r\n      ]);\r\n      for (let i = action.position + 1; i < state.order.length; i++) {\r\n        const id = state.order[i];\r\n        let step = newSteps.get(id);\r\n        newSteps.set(id, {\r\n          ...step,\r\n          reference1: checkReferenceAfterInsert({ ...step.reference1 }, action.position),\r\n          reference2: checkReferenceAfterInsert({ ...step.reference2 }, action.position)\r\n        })\r\n      }\r\n      let newState = { ...state, rank: newRank, order: newOrder, allSteps: newSteps, id: state.id+1 };\r\n      for (let i = action.position + 1; i < newState.order.length; i++) {\r\n        let id = newState.order[i];\r\n        newSteps.set(id, validateStep(\r\n          newSteps.get(id),\r\n          id,\r\n          { ...newState, newSteps },\r\n          language\r\n        ));\r\n      }\r\n      return {\r\n        ...newState,\r\n        allSteps: newSteps\r\n      }\r\n    }\r\n\r\n    case STEP_UP: {\r\n      let newRank = new Map([...state.rank]);\r\n      newRank.set(state.order[action.position], action.position - 1);\r\n      newRank.set(state.order[action.position - 1], action.position);\r\n      let newOrder = [\r\n        ...state.order.slice(0, action.position - 1),\r\n        state.order[action.position],\r\n        state.order[action.position - 1],\r\n        ...state.order.slice(action.position + 1)\r\n      ]\r\n      let newSteps = new Map([...state.allSteps]);\r\n      for (let i = action.position - 1; i < state.order.length; i++) {\r\n        const id = state.order[i];\r\n        let step = newSteps.get(id);\r\n        newSteps.set(id, {\r\n          ...step,\r\n          reference1: checkReferenceAfterMove({ ...step.reference1 }, action.position, action.position - 1),\r\n          reference2: checkReferenceAfterMove({ ...step.reference2 }, action.position, action.position - 1)\r\n        })\r\n      }\r\n      let newState = { ...state, rank: newRank, order: newOrder, allSteps: newSteps };\r\n      let checked = new Set();\r\n      for (let i = action.position - 1; i < newState.order.length; i++) {\r\n        const id = newState.order[i];\r\n        let step = newSteps.get(id);\r\n        if (i === action.position - 1 || i === action.position ||\r\n          (step.rule === \"Factoring\" && checked.has(step.reference2.object)) ||\r\n          (step.rule === \"Resolution\" && (checked.has(step.reference2.object) || checked.has(step.reference1.object)))) {\r\n          checked.add(i);\r\n          newSteps.set(id, validateStep(\r\n            newSteps.get(id),\r\n            id,\r\n            { ...newState, newSteps },\r\n            language\r\n          ));\r\n        }\r\n      }\r\n      return {\r\n        ...newState,\r\n        allSteps: newSteps\r\n      }\r\n    }\r\n\r\n    case STEP_DOWN: {\r\n      let newRank = new Map([...state.rank]);\r\n      newRank.set(state.order[action.position], action.position + 1);\r\n      newRank.set(state.order[action.position + 1], action.position);\r\n      let newOrder = [\r\n        ...state.order.slice(0, action.position),\r\n        state.order[action.position + 1],\r\n        state.order[action.position],\r\n        ...state.order.slice(action.position + 2)\r\n      ]\r\n      let newSteps = new Map([...state.allSteps]);\r\n      for (let i = action.position; i < state.order.length; i++) {\r\n        const id = state.order[i];\r\n        let step = newSteps.get(id);\r\n        newSteps.set(id, {\r\n          ...step,\r\n          reference1: checkReferenceAfterMove({ ...step.reference1 }, action.position, action.position + 1),\r\n          reference2: checkReferenceAfterMove({ ...step.reference2 }, action.position, action.position + 1)\r\n        })\r\n      }\r\n      let newState = { ...state, rank: newRank, order: newOrder, allSteps: newSteps };\r\n      let checked = new Set();\r\n      for (let i = action.position; i < newState.order.length; i++) {\r\n        const id = newState.order[i];\r\n        let step = newSteps.get(id);\r\n        if (i === action.position || i === action.position + 1 ||\r\n          (step.rule === \"Factoring\" && checked.has(step.reference2.object)) ||\r\n          (step.rule === \"Resolution\" && (checked.has(step.reference2.object) || checked.has(step.reference1.object)))) {\r\n          checked.add(i);\r\n          newSteps.set(id, validateStep(\r\n            newSteps.get(id),\r\n            id,\r\n            { ...newState, newSteps },\r\n            language\r\n          ));\r\n        }\r\n      }\r\n      return {\r\n        ...newState,\r\n        allSteps: newSteps\r\n      }\r\n    }\r\n\r\n    case CHANGE_CONST:\r\n    case CHANGE_FUN:\r\n    case CHANGE_PRED: \r\n    case IMPORT_STATE: {\r\n      const allSteps = new Map(state.allSteps);\r\n      for (let id of state.order) {\r\n        allSteps.set(id, validateStep(\r\n          step(allSteps.get(id), action),\r\n          id,\r\n          { ...state, allSteps },\r\n          language\r\n        ));\r\n      }\r\n      return { ...state, allSteps };\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction checkReferenceAfterInsert(reference, position) {\r\n  if (reference.object >= position) {\r\n    reference = {\r\n      object: reference.object + 1,\r\n      input: reference.object + 2 + \"\",\r\n      error: \"\"\r\n    }\r\n  }\r\n  return reference;\r\n}\r\n\r\nfunction checkReferenceAfterDelete(reference, position) {\r\n  if (reference.object > position) {\r\n    reference = {\r\n      object: reference.object - 1,\r\n      input: reference.object + \"\",\r\n      error: \"\"\r\n    }\r\n  } else if (reference.object === position) {\r\n    reference = {\r\n      object: undefined,\r\n      input: \"\",\r\n      error: \"\"\r\n    }\r\n  }\r\n  return reference;\r\n}\r\n\r\nfunction checkReferenceAfterMove(reference, position1, position2) {\r\n  if (reference.object === position1) {\r\n    reference = {\r\n      object: position2,\r\n      input: position2 + 1 + \"\",\r\n      error: \"\"\r\n    }\r\n  } else if (reference.object === position2) {\r\n    reference = {\r\n      object: position1,\r\n      input: position1 + 1 + \"\",\r\n      error: \"\"\r\n    }\r\n  }\r\n  return reference;\r\n}\r\n\r\nfunction validateStep(step, id, state, language) {\r\n  let reference1 = validateReference({ ...step.reference1 }, id, state);\r\n  let reference2 = validateReference({ ...step.reference2 }, id, state);\r\n  let renaming = validateRenaming({ ...step.renaming }, language);\r\n  let unifier = validateUnifier({ ...step.unifier }, language);\r\n  let formula = validateClause({ ...step.formula }, language)\r\n  let newStep = {\r\n    ...step,\r\n    reference1: reference1[1],\r\n    reference2: reference2[1],\r\n    renaming: renaming[1],\r\n    unifier: unifier[1],\r\n    formula: formula[1]\r\n  }\r\n  switch (step.rule) {\r\n    case \"Factoring\": {\r\n      if (!reference2[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n      const premise = getPremise(reference2[1].object, state);\r\n      if (!premise || !formula[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n\r\n      if (newStep.formula.object.isFactorOf(premise.formula.object, newStep.unifier.object)) {\r\n        return { ...newStep, valid: true, formula: { ...newStep.formula, error: \"\" } };\r\n      } else {\r\n        return {\r\n          ...newStep, valid: false, formula: {\r\n            ...newStep.formula, error: {\r\n              name: \"LogicError\",\r\n              message: \"This clause is not valid factor of clause \" + newStep.reference2.input\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    case \"Resolution\": {\r\n      if (!reference2[0] || !reference1[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n      const premise1 = getPremise(reference1[1].object, state);\r\n      const premise2 = getPremise(reference2[1].object, state);\r\n      if (!premise1 || !premise2 || !formula[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n      if (newStep.formula.object.isResolventOf(premise1.formula.object, premise2.formula.object, newStep.renaming.object, newStep.unifier.object)) {\r\n        return { ...newStep, valid: true, formula: { ...newStep.formula, error: \"\" } };\r\n      } else {\r\n        return {\r\n          ...newStep, valid: false, formula: {\r\n            ...newStep.formula, error: {\r\n              name: \"LogicError\",\r\n              message: \"This clause is not valid resolvent of clauses \" + newStep.reference1.input + \" and \" + newStep.reference2.input\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    case \"Assumption\": {\r\n      if (!formula[0]) {\r\n        return { ...newStep, valid: false };\r\n      }\r\n      return { ...newStep, valid: true };\r\n    }\r\n\r\n    default:\r\n      return { ...newStep };\r\n  }\r\n}\r\n\r\nfunction getPremise(reference, state) {\r\n  const premise = state.allSteps.get(state.order[parseInt(reference)]);\r\n  if (premise.valid) {\r\n    return premise;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default steps;","import { CHANGE_CONST, CHANGE_FUN, CHANGE_PRED } from '../actions';\r\nimport { parseConstants, parseFunctions, parsePredicates } from '@fmfi-uk-1-ain-412/js-fol-parser';\r\n\r\n\r\nconst language = (state = { consts: { input: \"\", object: new Set(), error: \"\", symbols: [] }, funs: { input: \"\", object: new Map(), error: \"\", symbols: [] }, preds: { input: \"\", object: new Map(), error: \"\", symbols: [] } }, action = { type: undefined }) => {\r\n    switch (action.type) {\r\n        case CHANGE_CONST:\r\n            let consts = { ...state.consts, input: action.text, error: \"\" };\r\n            try {\r\n                if (action.text !== \"\") {\r\n                    consts.symbols = parseConstants(action.text)\r\n                    consts.object = new Set(consts.symbols);\r\n                } else {\r\n                    consts.symbols = [];\r\n                    consts.object = new Set();\r\n                }\r\n\r\n            } catch (e) {\r\n                consts.error = e;\r\n            }\r\n            return { ...state, \r\n                consts: validateConsts(consts),\r\n                funs: validateFuns(state.funs, consts),\r\n                preds: validatePreds(state.preds, state.funs, consts)\r\n            };\r\n\r\n        case CHANGE_FUN:\r\n            let funs = { ...state.funs, input: action.text, error: \"\" };\r\n            try {\r\n                if (action.text !== \"\") {\r\n                    funs.symbols = parseFunctions(action.text);\r\n                    funs.object = new Map(funs.symbols.map(obj => [obj.name, obj.arity]));\r\n                } else {\r\n                    funs.symbols = [];\r\n                    funs.object = new Map();\r\n                }\r\n            } catch (e) {\r\n                funs.error = e;\r\n            }\r\n            return { ...state, \r\n                funs: validateFuns(funs, state.consts),\r\n                preds: validatePreds(state.preds, funs, state.consts)\r\n            };\r\n\r\n        case CHANGE_PRED:\r\n            let preds = { ...state.preds, input: action.text, error: \"\" };\r\n            try {\r\n                preds.symbols = parsePredicates(action.text);\r\n                preds.object = new Map(preds.symbols.map(obj => [obj.name, obj.arity]));\r\n            } catch (e) {\r\n                preds.error = e;\r\n            }\r\n            return { ...state, \r\n                preds: validatePreds(preds, state.funs, state.consts)\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction validSymbols(symbols) {\r\n    return symbols.error === \"\" && symbols.input !== \"\"\r\n}\r\n\r\nfunction validateConsts(consts) {\r\n    if (!validSymbols(consts) && consts.error.name !== \"DuplicityError\") {\r\n        return consts;\r\n    } else {\r\n        for (let i = 0; i < consts.symbols.length; i++) {\r\n            for (let j = i+1; j < consts.symbols.length; j++) {\r\n                if (consts.symbols[i] === consts.symbols[j]) {\r\n                    return {\r\n                        ...consts,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + consts.symbols[i] + \"\\\" is already a constant\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        ...consts,\r\n        error: \"\"\r\n    }\r\n}\r\n\r\nfunction validateFuns(funs, consts) {\r\n    if (!validSymbols(funs) && funs.error.name !== \"DuplicityError\") {\r\n        return funs;\r\n    } else {\r\n        for (let i = 0; i < funs.symbols.length; i++) {\r\n            for (let j = i+1; j < funs.symbols.length; j++) {\r\n                if (funs.symbols[i].name === funs.symbols[j].name) {\r\n                    return {\r\n                        ...funs,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + funs.symbols[i].name + \"\\\" is already a function\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n    } \r\n    if (validSymbols(consts)) {\r\n        for (const [symbol1, _] of funs.object) {\r\n            for (const symbol2 of consts.object) {\r\n                if (symbol1 === symbol2) {\r\n                    return {\r\n                        ...funs,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + symbol1 + \"\\\" is already a constant\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        ...funs,\r\n        error: \"\"\r\n    }\r\n}\r\n\r\nfunction validatePreds(preds, funs, consts) {\r\n    if (!validSymbols(preds) && preds.error.name !== \"DuplicityError\") {\r\n        return preds;\r\n    } else {\r\n        for (let i = 0; i < preds.symbols.length; i++) {\r\n            for (let j = i+1; j < preds.symbols.length; j++) {\r\n                if (preds.symbols[i].name === preds.symbols[j].name) {\r\n                    return {\r\n                        ...preds,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + preds.symbols[i].name + \"\\\" is already a predicate\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (validSymbols(funs)) {\r\n        for (const [symbol1, _] of funs.object) {\r\n            for (const [symbol2, _] of preds.object) {\r\n                if (symbol1 === symbol2) {\r\n                    return {\r\n                        ...preds,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + symbol1 + \"\\\" is already a function\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    } \r\n    if (validSymbols(consts)) {\r\n        for (const symbol1 of consts.object) {\r\n            for (const [symbol2, _] of preds.object) {\r\n                if (symbol1 === symbol2) {\r\n                    return {\r\n                        ...preds,\r\n                        error: {\r\n                            name: \"DuplicityError\",\r\n                            message: \"Symbol \\\"\" + symbol1 + \"\\\" is already a constant\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        ...preds,\r\n        error: \"\"\r\n    }\r\n\r\n}\r\n\r\nexport default language;","import undoable, { newHistory } from 'redux-undo';\r\nimport { ADD_STEP, CHANGE_STEP, DELETE_STEP, INSERT_STEP, STEP_UP, STEP_DOWN, CHANGE_RULE, CHANGE_RENAMING, CHANGE_REFERENCE1, CHANGE_REFERENCE2, CHANGE_UNIFIER, CHANGE_CONST, CHANGE_FUN, CHANGE_PRED, INPUT_FOCUS, INPUT_BLUR, EXPORT_STATE, IMPORT_STATE } from '../actions'\r\nimport steps from './steps'\r\nimport language from './language'\r\n\r\nconst initialCombinedState = {\r\n  language: language(),\r\n  steps: steps(),\r\n  inputChange: { originValue: \"\" }\r\n};\r\n\r\nfunction app(state = initialCombinedState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_CONST:\r\n    case CHANGE_FUN:\r\n    case CHANGE_PRED: {\r\n      const languageState = language(state.language, action);\r\n      const stepsState = steps(state.steps, action, languageState);\r\n      return { ...state, language: languageState, steps: stepsState };\r\n    }\r\n    case INPUT_FOCUS: {\r\n      return { ...state, inputChange: { originValue: action.text } }\r\n    }\r\n    case ADD_STEP:\r\n    case CHANGE_STEP:\r\n    case DELETE_STEP:\r\n    case INSERT_STEP:\r\n    case STEP_UP:\r\n    case STEP_DOWN:\r\n    case CHANGE_RULE:\r\n    case CHANGE_REFERENCE1:\r\n    case CHANGE_REFERENCE2:\r\n    case CHANGE_RENAMING:\r\n    case CHANGE_UNIFIER: {\r\n      const stepsState = steps(state.steps, action, state.language);\r\n      return { ...state, language: state.language, steps: stepsState }\r\n    }\r\n    case EXPORT_STATE: {\r\n      let link = document.createElement('a');\r\n      link.setAttribute(\"download\", \"resolutionProof\");\r\n      let stateCopy = {\r\n        ...state,\r\n        language: {\r\n          ...state.language,\r\n          consts: {\r\n            ...state.language.consts,\r\n            object: Array.from(state.language.consts.object)\r\n          },\r\n          funs: {\r\n            ...state.language.funs,\r\n            object: Array.from(state.language.funs.object.entries())\r\n          },\r\n          preds: {\r\n            ...state.language.preds,\r\n            object: Array.from(state.language.preds.object.entries())\r\n          }\r\n        },\r\n        steps: {\r\n          ...state.steps,\r\n          allSteps: Array.from(state.steps.allSteps.entries()),\r\n          rank: Array.from(state.steps.rank.entries())\r\n        }\r\n      }\r\n      let data = new Blob([JSON.stringify(stateCopy)], { type: 'application/json' });\r\n      let url = window.URL.createObjectURL(data);\r\n      link.href = url;\r\n      link.click();\r\n      return state;\r\n    }\r\n    case IMPORT_STATE: {\r\n      let state = JSON.parse(action.data);\r\n      state.steps.allSteps = new Map(state.steps.allSteps);\r\n      state.steps.rank = new Map(state.steps.rank);\r\n      state.language.consts.object = new Set(state.language.consts.object);\r\n      state.language.funs.object = new Map(state.language.funs.object);\r\n      state.language.preds.object = new Map(state.language.preds.object);\r\n      state.steps = steps(state.steps, action, state.language);\r\n      return state;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n\r\n  }\r\n}\r\n\r\nconst undoableState = undoable(app, {\r\n  filter: function filterActions(action, currentState, previousHistory) {\r\n    switch (action.type) {\r\n      case CHANGE_STEP:\r\n      case CHANGE_CONST:\r\n      case CHANGE_FUN:\r\n      case CHANGE_PRED:\r\n      case CHANGE_REFERENCE1:\r\n      case CHANGE_REFERENCE2:\r\n      case CHANGE_RENAMING:\r\n      case CHANGE_UNIFIER:\r\n      case INPUT_FOCUS: {\r\n        return false\r\n      }\r\n\r\n      case INPUT_BLUR: {\r\n        if (action.text !== currentState.inputChange.originValue) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n})\r\n\r\nexport function importState(stringData) {\r\n  let present = JSON.parse(stringData);\r\n  present.steps.allSteps = new Map(present.steps.allSteps);\r\n  present.steps.rank = new Map(present.steps.rank);\r\n  present.language.consts.object = new Set(present.language.consts.object);\r\n  present.language.funs.object = new Map(present.language.funs.object);\r\n  present.language.preds.object = new Map(present.language.preds.object);\r\n  present.steps = steps(present.steps, {type: IMPORT_STATE}, present.language);\r\n  let newState = newHistory([], present, []);\r\n  return newState;\r\n}\r\n\r\nexport function exportState(originState) {\r\n  return JSON.stringify({\r\n    ...originState.present,\r\n    language: {\r\n      ...originState.present.language,\r\n      consts: {\r\n        ...originState.present.language.consts,\r\n        object: Array.from(originState.present.language.consts.object)\r\n      },\r\n      funs: {\r\n        ...originState.present.language.funs,\r\n        object: Array.from(originState.present.language.funs.object.entries())\r\n      },\r\n      preds: {\r\n        ...originState.present.language.preds,\r\n        object: Array.from(originState.present.language.preds.object.entries())\r\n      }\r\n    },\r\n    steps: {\r\n      ...originState.present.steps,\r\n      allSteps: Array.from(originState.present.steps.allSteps.entries()),\r\n      rank: Array.from(originState.present.steps.rank.entries())\r\n    }\r\n  });\r\n}\r\n\r\nexport default undoableState;","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/App'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}